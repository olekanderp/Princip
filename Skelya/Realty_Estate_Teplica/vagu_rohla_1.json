[
    {
        "id": "fc0637b703c449c7",
        "type": "tab",
        "label": "Поток 1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "6153bc726fed9ae6",
        "type": "inject",
        "z": "fc0637b703c449c7",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 150,
        "y": 140,
        "wires": [
            [
                "fb094479b0a86ef9"
            ]
        ]
    },
    {
        "id": "fb094479b0a86ef9",
        "type": "function",
        "z": "fc0637b703c449c7",
        "name": "cmd",
        "func": "msg.payload = new Buffer(\"53490d0a\", \"hex\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 180,
        "wires": [
            [
                "babbf03780a3af14"
            ]
        ]
    },
    {
        "id": "2de66b09e268be22",
        "type": "debug",
        "z": "fc0637b703c449c7",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 160,
        "wires": []
    },
    {
        "id": "babbf03780a3af14",
        "type": "tcp request",
        "z": "fc0637b703c449c7",
        "server": "192.168.17.104",
        "port": "1001",
        "out": "char",
        "splitc": "\\n",
        "name": "",
        "x": 270,
        "y": 220,
        "wires": [
            [
                "878974a1f31d9a9b",
                "6c048fdf7120284a",
                "ac9b1c0e.f793b"
            ]
        ]
    },
    {
        "id": "878974a1f31d9a9b",
        "type": "function",
        "z": "fc0637b703c449c7",
        "name": "",
        "func": "var weight = msg.payload.toString();\nweight = weight.replace(\"kg\", \"\")\nmsg.payload = Number(weight);\nmsg.msg_connect = \"yes\"\n\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 220,
        "wires": [
            [
                "2de66b09e268be22",
                "73c47d461312566a"
            ]
        ]
    },
    {
        "id": "55bc265a547e9f36",
        "type": "inject",
        "z": "fc0637b703c449c7",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 150,
        "y": 40,
        "wires": [
            [
                "033c5eca39065f52"
            ]
        ]
    },
    {
        "id": "033c5eca39065f52",
        "type": "function",
        "z": "fc0637b703c449c7",
        "name": "correct_date",
        "func": "  \nvar d = new Date();\n\nvar utc = d.getTime() + (d.getTimezoneOffset() * 60000);\n\nvar offset = 4; // This is the offset for UTC+3, in your case (UTC+1) should be 1\n\nnewDate = new Date(utc + (3600000*offset));\n\nmsg.payload = newDate;\n//msg.payload = newDate.toLocaleString();\n\nflow.set(\"correct_date\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 40,
        "wires": [
            [
                "14467a23a2324bbb"
            ]
        ]
    },
    {
        "id": "14467a23a2324bbb",
        "type": "debug",
        "z": "fc0637b703c449c7",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 40,
        "wires": []
    },
    {
        "id": "2472a4245e50fc3d",
        "type": "file",
        "z": "fc0637b703c449c7",
        "name": "",
        "filename": "/home/pi/all_Data/file_weight.json",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 400,
        "y": 800,
        "wires": [
            [
                "ae2ae7fdb67fe4ea"
            ]
        ]
    },
    {
        "id": "858a6860a2073126",
        "type": "function",
        "z": "fc0637b703c449c7",
        "name": "",
        "func": "var send_file = {\n    \"barcode\": flow.get('barcode'),\n    \"weight\": flow.get('current_weight'),\n    \"date\": flow.get('correct_date'),\n  }\n  \nmsg.payload = send_file;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 800,
        "wires": [
            [
                "2472a4245e50fc3d"
            ]
        ]
    },
    {
        "id": "78127884387f37ce",
        "type": "inject",
        "z": "fc0637b703c449c7",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.4",
        "topic": "",
        "payloadType": "date",
        "x": 120,
        "y": 680,
        "wires": [
            [
                "a14fe03daca55d77"
            ]
        ]
    },
    {
        "id": "a14fe03daca55d77",
        "type": "exec",
        "z": "fc0637b703c449c7",
        "command": "sudo python read-rfid-on-rpi.py",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 390,
        "y": 680,
        "wires": [
            [
                "2abed1e12bd93e1e",
                "b5f616246bb31283",
                "93480d898ca0c147"
            ],
            [],
            []
        ]
    },
    {
        "id": "93480d898ca0c147",
        "type": "debug",
        "z": "fc0637b703c449c7",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 600,
        "wires": []
    },
    {
        "id": "cb63ed8df9520ae1",
        "type": "comment",
        "z": "fc0637b703c449c7",
        "name": "info",
        "info": " sudo killall python read-*",
        "x": 130,
        "y": 620,
        "wires": []
    },
    {
        "id": "2abed1e12bd93e1e",
        "type": "function",
        "z": "fc0637b703c449c7",
        "name": "",
        "func": "var barccode = msg.payload;\nif(barccode.length > 3){\n   barccode = barccode.replace(\"\\n\", \"\");\n    flow.set('barcode', barccode);\n    return msg; \n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 680,
        "wires": [
            [
                "93480d898ca0c147",
                "858a6860a2073126"
            ]
        ]
    },
    {
        "id": "b5f616246bb31283",
        "type": "delay",
        "z": "fc0637b703c449c7",
        "name": "",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 390,
        "y": 620,
        "wires": [
            [
                "a14fe03daca55d77"
            ]
        ]
    },
    {
        "id": "ae2ae7fdb67fe4ea",
        "type": "debug",
        "z": "fc0637b703c449c7",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 800,
        "wires": []
    },
    {
        "id": "6c86ba9172cda28c",
        "type": "inject",
        "z": "fc0637b703c449c7",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.3",
        "topic": "",
        "payloadType": "date",
        "x": 130,
        "y": 80,
        "wires": [
            [
                "28ef073c0d49da44"
            ]
        ]
    },
    {
        "id": "28ef073c0d49da44",
        "type": "function",
        "z": "fc0637b703c449c7",
        "name": "INIT",
        "func": "flow.set(\"tr_start_write_to_file\", false);\nflow.set('barcode',\"\");\nflow.set('current_weight',0);\nflow.set('correct_date', \"\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "89bc066565200fcd",
        "type": "function",
        "z": "fc0637b703c449c7",
        "name": "",
        "func": "var date = msg.req.query.date + `.000Z`;\nmsg.date = new Date(date);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 1000,
        "wires": [
            [
                "7a2f4b3f17f176dc",
                "eb4dff7b325383ab"
            ]
        ]
    },
    {
        "id": "6e602dbda89f8b6e",
        "type": "http in",
        "z": "fc0637b703c449c7",
        "name": "",
        "url": "/getFile",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 1000,
        "wires": [
            [
                "89bc066565200fcd",
                "1c749d8e9790edc0"
            ]
        ]
    },
    {
        "id": "7a2f4b3f17f176dc",
        "type": "file in",
        "z": "fc0637b703c449c7",
        "name": "",
        "filename": "/home/pi/all_Data/file_weight.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 490,
        "y": 1000,
        "wires": [
            [
                "4776a018.75ad8"
            ]
        ]
    },
    {
        "id": "4776a018.75ad8",
        "type": "function",
        "z": "fc0637b703c449c7",
        "name": "",
        "func": "var array = msg.payload;\nvar allJson = []\nvar ArrayJsonString = array.split(\"\\n\");\nArrayJsonString.splice(ArrayJsonString.length-1, 1); // начиная с позиции 1, удалить 1 элемент\n\nfor (var i in ArrayJsonString) {\n  var obj = JSON.parse(ArrayJsonString[i]);\n  allJson.push(obj);\n}\n\n//msg.payload = allJson;\n\nvar sortArray = [];\nfor (var j = 0; j < allJson.length; j++) {\n    allJson[j].date = new Date(allJson[j].date);\n    if(allJson[j].date >= msg.date){\n       sortArray.push(allJson[j]); \n    }\n}\n\nfor (var k = 0; k < sortArray.length; k++) {\n    //sortArray[k].date = sortArray[k].date.toString().substring(0,19);\n    //sortArray[k].date = sortArray[k].date.toISOString().replace('Z', '');\n    sortArray[k].date = sortArray[k].date.toISOString().replace('Z', ' ').split(\".\")[0];\n}\n\n\nmsg.payload = sortArray;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 1000,
        "wires": [
            [
                "13d7811b.cdb0af",
                "f815731c.46217"
            ]
        ]
    },
    {
        "id": "13d7811b.cdb0af",
        "type": "http response",
        "z": "fc0637b703c449c7",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 920,
        "y": 1040,
        "wires": []
    },
    {
        "id": "f815731c.46217",
        "type": "debug",
        "z": "fc0637b703c449c7",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 1000,
        "wires": []
    },
    {
        "id": "1bf8c339bcac0f8f",
        "type": "inject",
        "z": "fc0637b703c449c7",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "12312312323\\n",
        "payloadType": "str",
        "x": 400,
        "y": 560,
        "wires": [
            [
                "2abed1e12bd93e1e",
                "93480d898ca0c147"
            ]
        ]
    },
    {
        "id": "eb4dff7b325383ab",
        "type": "debug",
        "z": "fc0637b703c449c7",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 420,
        "y": 920,
        "wires": []
    },
    {
        "id": "1c749d8e9790edc0",
        "type": "debug",
        "z": "fc0637b703c449c7",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 240,
        "y": 920,
        "wires": []
    },
    {
        "id": "5d53de011b0a388a",
        "type": "inject",
        "z": "fc0637b703c449c7",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 1180,
        "wires": [
            [
                "ba5591c57f983f33"
            ]
        ]
    },
    {
        "id": "ba5591c57f983f33",
        "type": "exec",
        "z": "fc0637b703c449c7",
        "command": "sudo killall python read-*",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 460,
        "y": 1180,
        "wires": [
            [
                "7a0b5f5150c13b24"
            ],
            [],
            []
        ]
    },
    {
        "id": "7a0b5f5150c13b24",
        "type": "debug",
        "z": "fc0637b703c449c7",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 1160,
        "wires": []
    },
    {
        "id": "25a7088965d37587",
        "type": "comment",
        "z": "fc0637b703c449c7",
        "name": "Kill proces read barcode",
        "info": " sudo killall python read-*",
        "x": 180,
        "y": 1120,
        "wires": []
    },
    {
        "id": "73c47d461312566a",
        "type": "function",
        "z": "fc0637b703c449c7",
        "name": "",
        "func": "var weight = msg.payload;\nflow.set('current_weight', weight)\nvar send_file = {\n    \"weight\": weight,\n    \"date\": flow.get('correct_date'),\n    \"connect\": msg.msg_connect\n  }\n  \nmsg.payload = send_file;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 220,
        "wires": [
            [
                "6e238b722264d1ac",
                "b2ba8fccf5fa42da"
            ]
        ]
    },
    {
        "id": "6e238b722264d1ac",
        "type": "file",
        "z": "fc0637b703c449c7",
        "name": "",
        "filename": "/home/pi/all_Data/weight_real.json",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 940,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "6c048fdf7120284a",
        "type": "function",
        "z": "fc0637b703c449c7",
        "name": "",
        "func": "var weight = msg.payload.toString();\n\nmsg.payload = weight;\n\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 140,
        "wires": [
            [
                "4a661c3e15f92e90"
            ]
        ]
    },
    {
        "id": "4a661c3e15f92e90",
        "type": "debug",
        "z": "fc0637b703c449c7",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 100,
        "wires": []
    },
    {
        "id": "1d6ab27c.42c20e",
        "type": "function",
        "z": "fc0637b703c449c7",
        "name": "time_rasp",
        "func": "var time = new Date();\nflow.set(\"time_rasp\", time);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 340,
        "y": 360,
        "wires": [
            [
                "37cf983f.842438"
            ]
        ]
    },
    {
        "id": "35f8c7ec.050c18",
        "type": "inject",
        "z": "fc0637b703c449c7",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payloadType": "date",
        "x": 150,
        "y": 360,
        "wires": [
            [
                "1d6ab27c.42c20e"
            ]
        ]
    },
    {
        "id": "37cf983f.842438",
        "type": "function",
        "z": "fc0637b703c449c7",
        "name": "sub time",
        "func": "var weigth_time = flow.get(\"weigth_time\");\nvar time_rasp = flow.get(\"time_rasp\");\n\nvar sub = time_rasp - weigth_time;\n//msg.payload = {\n//    sub: time_rasp - weigth_time,\n//    weigth_time: weigth_time,\n//    time_rasp: time_rasp\n//}\n\n    if(sub > 6000){\n    msg.payload = 0;\n    msg.msg_connect = \"not\"\n    return msg;\n    }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 360,
        "wires": [
            [
                "57db66ac.809568",
                "73c47d461312566a"
            ]
        ]
    },
    {
        "id": "57db66ac.809568",
        "type": "debug",
        "z": "fc0637b703c449c7",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 650,
        "y": 360,
        "wires": []
    },
    {
        "id": "ac9b1c0e.f793b",
        "type": "function",
        "z": "fc0637b703c449c7",
        "name": "weigth_time",
        "func": "flow.set('weigth_time',new Date());\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 350,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "76ca7b64a87e97ae",
        "type": "inject",
        "z": "fc0637b703c449c7",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 130,
        "y": 320,
        "wires": [
            [
                "ac9b1c0e.f793b"
            ]
        ]
    },
    {
        "id": "b2ba8fccf5fa42da",
        "type": "debug",
        "z": "fc0637b703c449c7",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 160,
        "wires": []
    }
]
