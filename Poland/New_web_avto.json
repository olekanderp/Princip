[
    {
        "id": "abbadffc.010998",
        "type": "tab",
        "label": "scale 1"
    },
    {
        "id": "ff28ef7c.bc9d7",
        "type": "tab",
        "label": "processing_scale1"
    },
    {
        "id": "52049de1.4fda5c",
        "type": "tab",
        "label": "Dashboard"
    },
    {
        "id": "4405ba9d.eb37b4",
        "type": "tab",
        "label": "Flow 1"
    },
    {
        "id": "e000942c.4e9718",
        "type": "tab",
        "label": "JD"
    },
    {
        "id": "bdf26ad7.fc049",
        "type": "tab",
        "label": "JD processing_scale1"
    },
    {
        "id": "114661a7.e8a2be",
        "type": "tab",
        "label": "Avto_2"
    },
    {
        "id": "e57604f8.25388",
        "type": "tab",
        "label": "Avto_2 processing_scale1"
    },
    {
        "id": "a54f8e5d.b4c1f8",
        "type": "tab",
        "label": "JD 2"
    },
    {
        "id": "50659fd3.e828d8",
        "type": "tab",
        "label": "JD 2 processing_scale1"
    },
    {
        "id": "92d60b25.5643a",
        "type": "subflow",
        "name": "ETTN",
        "info": "",
        "in": [],
        "out": []
    },
    {
        "id": "314bbb74.33c2fc",
        "type": "subflow",
        "name": "Subflow 1",
        "info": "",
        "in": [],
        "out": []
    },
    {
        "id": "e71538f6.a8deb",
        "type": "ui_tab",
        "name": "Smart Scales",
        "icon": "dashboard"
    },
    {
        "id": "fb69cbf4.cc7ca",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "9277d5e4.5a8b7",
        "type": "ui_group",
        "name": "Scale and identity",
        "tab": "e71538f6.a8deb",
        "order": 5,
        "disp": true,
        "width": "6"
    },
    {
        "id": "9885241c.570b28",
        "type": "ui_group",
        "name": "Additional properties",
        "tab": "e71538f6.a8deb",
        "order": 2,
        "disp": true,
        "width": "6"
    },
    {
        "id": "cf88991a.a5d898",
        "type": "modbus-client",
        "name": "",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "tcpHost": "10.10.15.203",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "unit_id": 1,
        "commandDelay": 1,
        "clientTimeout": 1000,
        "reconnectTimeout": 2000
    },
    {
        "id": "9f8ffb9b.fd4b",
        "type": "modbus-client",
        "name": "",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "tcpHost": "10.10.15.202",
        "tcpPort": "1702",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectTimeout": "2000"
    },
    {
        "id": "edcfbb63.d2e2c8",
        "type": "modbus-client",
        "name": "",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "tcpHost": "10.10.190.103",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectTimeout": "2000"
    },
    {
        "id": "9cc5a57c.925bc",
        "type": "serial-port",
        "serialport": "/dev/ttyUSB0",
        "serialbaud": "1200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": false
    },
    {
        "id": "a086fb66.5fa688",
        "type": "ui_tab",
        "name": "Smart Scales",
        "icon": "dashboard"
    },
    {
        "id": "4358e8ed.41d73",
        "type": "socket-io-event",
        "addr": "getWeight"
    },
    {
        "id": "64f39e3a.51bd8",
        "type": "socket-io-server",
        "port": "4001"
    },
    {
        "id": "9bf2a625.21192",
        "type": "ui_group",
        "name": "Поточна вага",
        "tab": "4a292a06.c5892c",
        "order": 1,
        "disp": true,
        "width": "6"
    },
    {
        "id": "556dabca.b016cc",
        "type": "ui_group",
        "name": "Графік ваги",
        "tab": "4a292a06.c5892c",
        "order": 2,
        "disp": true,
        "width": "6"
    },
    {
        "id": "4a292a06.c5892c",
        "type": "ui_tab",
        "name": "Smart Scales",
        "icon": "dashboard"
    },
    {
        "id": "ec540af7.fcfba8",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "verifyservercert": true
    },
    {
        "id": "a39087d9.27b8a",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "verifyservercert": false
    },
    {
        "id": "f9e9aff8.db4bd8",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "verifyservercert": false
    },
    {
        "id": "ad6985c6.1486e8",
        "type": "socket-io-server",
        "port": "4002"
    },
    {
        "id": "985ecbc7.67a138",
        "type": "websocket-listener",
        "z": "e57604f8.25388",
        "path": "/ws/simple",
        "wholemsg": "false"
    },
    {
        "id": "c2417995571b31a1",
        "type": "websocket-listener",
        "path": "/ws/simplejd",
        "wholemsg": "false"
    },
    {
        "id": "5d976ff4.1f4cb8",
        "type": "function",
        "z": "abbadffc.010998",
        "name": "GET WEIGHT",
        "func": "msg.payload = flow.get('parser')(msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 388,
        "y": 219,
        "wires": [
            [
                "4889c15e.2c4b6",
                "bdd00c6c.199ba"
            ]
        ]
    },
    {
        "id": "10169553.f52c43",
        "type": "comment",
        "z": "abbadffc.010998",
        "name": "Device level",
        "info": "",
        "x": 90,
        "y": 140,
        "wires": []
    },
    {
        "id": "9ba04c32.f6295",
        "type": "inject",
        "z": "abbadffc.010998",
        "name": "init",
        "repeat": "",
        "crontab": "",
        "once": true,
        "topic": "",
        "payload": "init",
        "payloadType": "str",
        "x": 90,
        "y": 80,
        "wires": [
            [
                "c2863382.4306e"
            ]
        ]
    },
    {
        "id": "a512369d.4c27b",
        "type": "comment",
        "z": "abbadffc.010998",
        "name": "INITIALIZING",
        "info": "",
        "x": 90,
        "y": 20,
        "wires": []
    },
    {
        "id": "c2863382.4306e",
        "type": "function",
        "z": "abbadffc.010998",
        "name": "Модель весов",
        "func": "flow.set('inputString',\"CMD\");\nflow.set('parser',function(v){\n       v = v;\n       return Number(v);\n    }\n  );\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 280,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "4889c15e.2c4b6",
        "type": "link out",
        "z": "abbadffc.010998",
        "name": "",
        "links": [
            "21f00895.e76f38"
        ],
        "x": 521,
        "y": 219,
        "wires": []
    },
    {
        "id": "4a31ba00.8bb858",
        "type": "debug",
        "z": "abbadffc.010998",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 377,
        "y": 256,
        "wires": []
    },
    {
        "id": "bdd00c6c.199ba",
        "type": "debug",
        "z": "abbadffc.010998",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 454,
        "y": 180,
        "wires": []
    },
    {
        "id": "7297e0e7.7e5f8",
        "type": "function",
        "z": "abbadffc.010998",
        "name": "parser",
        "func": "var weight_with_reg = msg.payload[0];\nvar clear_tail = 0b00000000000000001111111111111111;\nvar LE = weight_with_reg << 8;\nvar BE = weight_with_reg >> 8;\nvar str = (LE | BE) & clear_tail;\n\n    if(str >= 50000){\n         var LE_1 = weight_with_reg & 0b0000000011111111;\n         var BE_1 = weight_with_reg >> 8;\n        \n         var buf2 = Buffer.from([BE,LE]);\n         var out = buf2.readInt16LE(0);\n        \n        msg.payload = out;\n    }else {\n        msg.payload = str;\n    }\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 250,
        "y": 180,
        "wires": [
            [
                "5d976ff4.1f4cb8",
                "4a31ba00.8bb858"
            ]
        ]
    },
    {
        "id": "f486b686.b5c9d",
        "type": "debug",
        "z": "abbadffc.010998",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 270,
        "y": 320,
        "wires": []
    },
    {
        "id": "83f27256.b60e98",
        "type": "comment",
        "z": "abbadffc.010998",
        "name": "Device modbus",
        "info": "",
        "x": 94,
        "y": 202,
        "wires": []
    },
    {
        "id": "ba52371d.1ffa5",
        "type": "modbus-read",
        "z": "abbadffc.010998",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "0",
        "quantity": "1",
        "rate": "1",
        "rateUnit": "s",
        "server": "cf88991a.a5d898",
        "x": 96,
        "y": 251,
        "wires": [
            [
                "7297e0e7.7e5f8",
                "f486b686.b5c9d"
            ],
            []
        ]
    },
    {
        "id": "21f00895.e76f38",
        "type": "link in",
        "z": "ff28ef7c.bc9d7",
        "name": "weight",
        "links": [
            "20edce7e.5b51e2",
            "a952ade4.1021c",
            "4889c15e.2c4b6"
        ],
        "x": 35,
        "y": 380,
        "wires": [
            [
                "b232375d.adbac8",
                "9f2d9db8.20b56",
                "45a775ed.a31c0c"
            ]
        ]
    },
    {
        "id": "b232375d.adbac8",
        "type": "function",
        "z": "ff28ef7c.bc9d7",
        "name": "main module",
        "func": "var prevWeight = flow.get('prevWeight');\nvar transaction = flow.get('transaction');\nvar transactionData = flow.get('transactionData');\nvar transactionMaxWeight = flow.get('transactionMaxWeight');\nvar transactionHasMaxWeight = flow.get('transactionHasMaxWeight');\nvar transactionHasMinWeight = flow.get('transactionHasMinWeight');\nvar transactionHasMaxDuration = flow.get('transactionHasMaxDuration');\nvar waybill = flow.get('transactionWaybill');\nvar weight = msg.payload;\nvar stableSize = 5;\nvar duration = 0;\nvar maxWeight = flow.get('maxWeight');\nvar maxDuration = flow.get('maxDuration');\nvar prevTransaction = transaction;\nvar minWeight = flow.get('minWeight');\nvar minTriggerWeight = flow.get('minTriggerWeight');\n\n//transaction\nif (prevWeight === null){\n    prevWeight = msg.payload;    \n}else{\n    if((prevWeight <= 0) && (weight > 0) && (weight > minTriggerWeight)){\n        //start of transaction\n        transaction = Date.now();\n        msg.on = true;\n        flow.set('transaction',transaction);\n    }else if((prevWeight > 0) && (weight <=0) && (transaction)){\n        transaction = 0;\n        msg.on = false;\n        transactionData = [];\n        flow.set('transaction',transaction);\n        flow.set('transactionMaxWeight',null);\n        flow.set('transactionHasMaxWeight',null);\n        flow.set('transactionHasMinWeight',null);\n        flow.set('transactionHasMaxDuration',null);\n        flow.set('transactionWaybill',null);\n        flow.set('transactionMetadata',null);\n    }else if((transaction === null) && (weight>0) && (weight > minTriggerWeight)){\n        transaction = Date.now();\n        flow.set('transaction',transaction);\n    }\n}\n\nif (transaction > 0){\n    transactionData.push(weight);    \n\n    //stable\n    if(transactionData.length > stableSize+1){\n        var stabletmp = true;\n        for (var i = transactionData.length-1; i > transactionData.length-1-stableSize; i--){\n            if (transactionData[i] !== transactionData[i-1]){\n                stabletmp = false;\n                msg.stable = stabletmp;\n                break;\n            }\n            msg.stable = stabletmp;\n        }\n    }else{\n        msg.stable = false;\n    }\n\n    //duration & transactionMaxWeight\n    duration = (Number(Date.now()) - Number(transaction));\n    if( (weight>transactionMaxWeight) || (transactionMaxWeight === null)){\n        transactionMaxWeight = weight;\n        flow.set(\"transactionMaxWeight\",transactionMaxWeight);\n    }\n    \n    if(!transactionHasMaxWeight && weight > maxWeight){\n        msg.transactionHasMaxWeight = true;\n        flow.set('transactionHasMaxWeight',true);\n    }\n    \n    if(!transactionHasMinWeight && weight < minWeight){\n        msg.transactionHasMinWeight = true;\n        flow.set('transactionHasMinWeight',true);\n    }\n    \n    //max duartion\n    if(!transactionHasMaxDuration && duration > maxDuration){\n        msg.transactionHasMaxDuration = true;\n        flow.set('transactionHasMaxDuration',true);\n    }\n}\n\n//result\nmsg.metadata = {\n    'weight':weight,\n    'prevWeight':prevWeight,\n    'prevTransaction':prevTransaction,\n    'transaction':transaction,\n    'on':msg.on,\n    'transactionDataCount':transactionData.length,\n    'stable':msg.stable,\n    'duration':duration,\n    'transactionMaxWeight':transactionMaxWeight,\n    'waybill':waybill\n}\nflow.set('transactionData',transactionData);\nflow.set('prevWeight',weight);\nflow.set('transactionMetadata',msg.metadata);\nflow.set('lasttimedata', new Date());\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 170,
        "y": 400,
        "wires": [
            [
                "8a0ccafb.bb71c8",
                "a13d0687.71e8d8",
                "342d4a2e.6d0cc6",
                "e65becf2.6f36b8",
                "c16187c0.c5f"
            ]
        ]
    },
    {
        "id": "c8a22dea.1e164",
        "type": "function",
        "z": "ff28ef7c.bc9d7",
        "name": "get weight from accounting system",
        "func": "var transactionMetada = flow.get('transactionMetadata');\nvar buisness_data = msg.req.query;\nmsg.metadata = Object.assign(transactionMetada,buisness_data);\nmsg.event_id = flow.get('event_get_weight_acc');\nflow.set('transactionWaybill',msg.req.query.waybill);\nmsg.description = 'Зважили в 1С. Поточна вага: ' + msg.metadata.weight+\" Номер авто: \"+buisness_data.truck_id+\" \"+buisness_data.truck2_id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 700,
        "wires": [
            [
                "afc0cdb8.a726f"
            ]
        ]
    },
    {
        "id": "8a0ccafb.bb71c8",
        "type": "switch",
        "z": "ff28ef7c.bc9d7",
        "name": "switch move",
        "property": "on",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 390,
        "y": 360,
        "wires": [
            [
                "36cc9850.51a698"
            ],
            [
                "3bb4c54c.8d14ca",
                "cb8b227f.3e8dd8"
            ]
        ]
    },
    {
        "id": "b4e1888d.abfc78",
        "type": "http request",
        "z": "ff28ef7c.bc9d7",
        "name": "EVENTS",
        "method": "POST",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 1140,
        "y": 440,
        "wires": [
            [
                "6c553406.f86b74"
            ]
        ]
    },
    {
        "id": "afc0cdb8.a726f",
        "type": "function",
        "z": "ff28ef7c.bc9d7",
        "name": "events payload",
        "func": "var event_id = msg.event_id;\nvar scale_id = flow.get('scale_id');\nmsg.payload = {\n    'event':{\n        'id':msg.event_id\n    },\n    'devices':[{'id':scale_id}],\n    'data':msg.metadata,\n    'description':msg.description\n}\n\nmsg.headers = {\n    \"content-type\":\"application/json\"\n}\n\nmsg.url = flow.get('main_host')+flow.get('event_url');\nmsg.main_host = flow.get('main_host');\nmsg.event_url = flow.get('event_url');\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 940,
        "y": 440,
        "wires": [
            [
                "bfae188f.61d91",
                "2f33c250.ddae8e"
            ]
        ]
    },
    {
        "id": "36cc9850.51a698",
        "type": "function",
        "z": "ff28ef7c.bc9d7",
        "name": "move in",
        "func": "msg.event_id = flow.get('event_move_in_id');\nmsg.description = 'Заїзд на ваги. Поточна вага: ' + msg.metadata.weight;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 580,
        "y": 320,
        "wires": [
            [
                "afc0cdb8.a726f"
            ]
        ]
    },
    {
        "id": "a13d0687.71e8d8",
        "type": "switch",
        "z": "ff28ef7c.bc9d7",
        "name": "switch max weight",
        "property": "transactionHasMaxWeight",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 390,
        "y": 400,
        "wires": [
            [
                "30454f9.6f53cb"
            ]
        ]
    },
    {
        "id": "30454f9.6f53cb",
        "type": "function",
        "z": "ff28ef7c.bc9d7",
        "name": "transactionHasMaxWeight",
        "func": "msg.event_id = flow.get('event_max_weight_id');\nmsg.description = 'Перевищена максимально-допустима вага: ' + msg.metadata.weight;\nmsg.needSnapshot = true;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 630,
        "y": 400,
        "wires": [
            [
                "afc0cdb8.a726f"
            ]
        ]
    },
    {
        "id": "28f92c3d.4f0364",
        "type": "inject",
        "z": "ff28ef7c.bc9d7",
        "name": "",
        "repeat": "1",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 620,
        "wires": [
            [
                "b82a2848.8a6078"
            ]
        ]
    },
    {
        "id": "b82a2848.8a6078",
        "type": "function",
        "z": "ff28ef7c.bc9d7",
        "name": "check scale health",
        "func": "var lastcheckHealth = flow.get('checkHealth');\nvar checkHealth = null;\nvar lasttimedata = flow.get('lasttimedata');\n\nvar currenttimedata = new Date();\n\nif ((currenttimedata - lasttimedata) > 3000){\n    checkHealth = false;\n} else {\n    checkHealth = true;\n}\n\nflow.set(\"checkHealth\",checkHealth);\n\nif (lastcheckHealth != checkHealth){\n    msg.checkHealth = checkHealth;\n}else{\n    msg.checkHealth = null;\n}\nmsg.payload = checkHealth;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 310,
        "y": 620,
        "wires": [
            [
                "a3738e37.ae7f88",
                "9e4676ce.86a42"
            ]
        ]
    },
    {
        "id": "a3738e37.ae7f88",
        "type": "switch",
        "z": "ff28ef7c.bc9d7",
        "name": "",
        "property": "checkHealth",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 470,
        "y": 580,
        "wires": [
            [
                "8ff9c378.2ad6c8"
            ],
            [
                "10f1eb37.17002d"
            ]
        ]
    },
    {
        "id": "10f1eb37.17002d",
        "type": "function",
        "z": "ff28ef7c.bc9d7",
        "name": "off",
        "func": "msg.event_id = flow.get('event_off_id');\nmsg.description = 'Прилад відключено';\nmsg.metadata = {\n    'state':msg.checkHealth\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 610,
        "y": 560,
        "wires": [
            [
                "afc0cdb8.a726f"
            ]
        ]
    },
    {
        "id": "8ff9c378.2ad6c8",
        "type": "function",
        "z": "ff28ef7c.bc9d7",
        "name": "on",
        "func": "msg.event_id = flow.get('event_on_id');\nmsg.description = 'Прилад підключено';\nmsg.metadata = {\n    'state':msg.checkHealth\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 610,
        "y": 520,
        "wires": [
            [
                "afc0cdb8.a726f"
            ]
        ]
    },
    {
        "id": "23fef191.72fb8e",
        "type": "function",
        "z": "ff28ef7c.bc9d7",
        "name": "main config",
        "func": "flow.set('prevWeight',null);\nflow.set('transaction',null);\nflow.set('transactionData',[]);\nflow.set('transactionMaxWeight',null);\nflow.set('transactionHasMinWeight',null);\nflow.set('transactionHasMaxWeight',null);\nflow.set('transactionHasMaxDuration',null);\nflow.set('lasttimedata', new Date());\nflow.set('checkHealth',null);\nflow.set('transactionWaybill',null);\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "52015096.f6bc",
        "type": "inject",
        "z": "ff28ef7c.bc9d7",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": true,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 90,
        "y": 220,
        "wires": [
            [
                "1c88c517.d1200b",
                "23fef191.72fb8e"
            ]
        ]
    },
    {
        "id": "c5b5abb1.7253f",
        "type": "http request",
        "z": "ff28ef7c.bc9d7",
        "name": "STATE",
        "method": "POST",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 1130,
        "y": 580,
        "wires": [
            [
                "f31ea76d.88682"
            ]
        ]
    },
    {
        "id": "9e4676ce.86a42",
        "type": "function",
        "z": "ff28ef7c.bc9d7",
        "name": "device state",
        "func": "msg.payload = {\n    \"state\":msg.payload\n}\nmsg.headers = {\n    \"content-type\":\"application/json\"\n}\nmsg.url = flow.get('main_host')+flow.get('state_url')+\"?id=\"+flow.get(\"scale_id\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 950,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "4cffb066.e84f88",
        "type": "function",
        "z": "ff28ef7c.bc9d7",
        "name": "device config",
        "func": "var device_config = JSON.parse(msg.payload);\n\nflow.set('scale_id',device_config.scale_id);\nflow.set('event_move_in_id',device_config.event_move_in_id);\nflow.set('event_move_out_id',device_config.event_move_out_id);\nflow.set('event_max_weight_id',device_config.event_max_weight_id);\nflow.set('event_off_id',device_config.event_off_id);\nflow.set('event_on_id', device_config.event_on_id);\nflow.set('event_max_duration',device_config.event_max_duration);\nflow.set('event_fake_traffic',device_config.event_fake_traffic);\nflow.set('main_host',device_config.main_host);\nflow.set('event_url',device_config.event_url);\nflow.set('state_url',device_config.state_url);\nflow.set('maxWeight',device_config.maxWeight);\nflow.set('minWeight',device_config.minWeight);\nflow.set('maxDuration',device_config.maxDuration);\nflow.set('checkHealthTimeout',device_config.checkHealthTimeout);\nflow.set('event_get_weight_acc',device_config.event_get_weight_acc);\nflow.set('event_min_weight',device_config.event_min_weight);\nflow.set('minTriggerWeight',device_config.minTriggerWeight);\nflow.set('snapshot_url',device_config.minTriggerWeight);\nflow.set('camera_url',device_config.camera_url);\n\n\n\n// flow.set('scale_id','80096CB0EFD83B63E0533300000A4334');\n// flow.set('event_move_in_id','80096D9ABE7F68F3E0533300000A6C0D');\n// flow.set('event_move_out_id','80096D9ABE8068F3E0533300000A6C0D');\n// flow.set('event_max_weight_id','85A255F950F9BEF4E0533300000AC45D');\n// flow.set('event_off_id','85A2CC4570292DD1E0533300000A0C94');\n// flow.set('event_on_id', '85A2CC45702A2DD1E0533300000A0C94');\n// flow.set('event_max_duration','8642EE858DE89BAAE0533300000AFCC7');\n// flow.set('main_host','http://prod.apex.rest/ords/ettn');\n// flow.set('event_url','/iot_cli/events/log');\n// flow.set('state_url','/v1/device');\n// flow.set('maxWeight',40000);\n// flow.set('maxDuration',20000);\n// flow.set('checkHealthTimeout',3000);\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 570,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "3bb4c54c.8d14ca",
        "type": "function",
        "z": "ff28ef7c.bc9d7",
        "name": "move out",
        "func": "msg.event_id = flow.get('event_move_out_id');\nmsg.description = 'Зїзд з ваг. Поточна вага: ' + msg.metadata.weight;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 580,
        "y": 360,
        "wires": [
            [
                "afc0cdb8.a726f"
            ]
        ]
    },
    {
        "id": "342d4a2e.6d0cc6",
        "type": "switch",
        "z": "ff28ef7c.bc9d7",
        "name": "max duration",
        "property": "transactionHasMaxDuration",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 370,
        "y": 440,
        "wires": [
            [
                "5d214a39.dacb5c"
            ]
        ]
    },
    {
        "id": "5d214a39.dacb5c",
        "type": "function",
        "z": "ff28ef7c.bc9d7",
        "name": "transaction has max duration",
        "func": "msg.event_id = flow.get('event_max_duration');\nmsg.description = 'Перевищено максимальний час находження на вагах: ' + msg.metadata.duration/1000;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 640,
        "y": 440,
        "wires": [
            [
                "afc0cdb8.a726f"
            ]
        ]
    },
    {
        "id": "abe1cb4.62170b8",
        "type": "http in",
        "z": "ff28ef7c.bc9d7",
        "name": "",
        "url": "/firmware",
        "method": "post",
        "swaggerDoc": "",
        "x": 140,
        "y": 160,
        "wires": [
            [
                "ca36a90e.ab6a98"
            ]
        ]
    },
    {
        "id": "ca36a90e.ab6a98",
        "type": "file",
        "z": "ff28ef7c.bc9d7",
        "name": "deivce_config",
        "filename": "deivce_config.json",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "x": 380,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "1c88c517.d1200b",
        "type": "file in",
        "z": "ff28ef7c.bc9d7",
        "name": "deivce_config",
        "filename": "deivce_config.json",
        "format": "utf8",
        "x": 380,
        "y": 200,
        "wires": [
            [
                "4cffb066.e84f88"
            ]
        ]
    },
    {
        "id": "cae1cde7.412af8",
        "type": "http in",
        "z": "ff28ef7c.bc9d7",
        "name": "",
        "url": "/serial",
        "method": "get",
        "swaggerDoc": "",
        "x": 120,
        "y": 40,
        "wires": [
            [
                "3177252b.3e15a2"
            ]
        ]
    },
    {
        "id": "3177252b.3e15a2",
        "type": "exec",
        "z": "ff28ef7c.bc9d7",
        "command": "cat /proc/cpuinfo",
        "addpay": true,
        "append": "| grep Serial",
        "useSpawn": "",
        "timer": "5",
        "name": "",
        "x": 350,
        "y": 40,
        "wires": [
            [
                "52704729.d357e8",
                "b7936fe7.d40408"
            ],
            [],
            []
        ]
    },
    {
        "id": "52704729.d357e8",
        "type": "http response",
        "z": "ff28ef7c.bc9d7",
        "name": "",
        "x": 550,
        "y": 20,
        "wires": []
    },
    {
        "id": "b7936fe7.d40408",
        "type": "function",
        "z": "ff28ef7c.bc9d7",
        "name": "",
        "func": "msg.payload = msg.payload.split(':')[1].replace('\\n','').replace(' ','');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 540,
        "y": 100,
        "wires": [
            [
                "f085c9a9.58c888"
            ]
        ]
    },
    {
        "id": "f085c9a9.58c888",
        "type": "debug",
        "z": "ff28ef7c.bc9d7",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 705,
        "y": 98,
        "wires": []
    },
    {
        "id": "2468ca8c.8cc956",
        "type": "inject",
        "z": "ff28ef7c.bc9d7",
        "name": "DEMO",
        "repeat": "",
        "crontab": "",
        "once": true,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 90,
        "y": 100,
        "wires": [
            [
                "8901221.bc003e"
            ]
        ]
    },
    {
        "id": "8901221.bc003e",
        "type": "function",
        "z": "ff28ef7c.bc9d7",
        "name": "DEMO Data",
        "func": "var device_config = {\n    'scale_id':'889DEB1AA0C57FC8E055000000000001',\n    'event_move_in_id':'80096D9ABE7F68F3E0533300000A6C0D',\n    'event_move_out_id':'80096D9ABE8068F3E0533300000A6C0D',\n    'event_max_weight_id':'85A255F950F9BEF4E0533300000AC45D',\n    'event_off_id':'85A2CC4570292DD1E0533300000A0C94',\n    'event_max_duration':'8642EE858DE89BAAE0533300000AFCC7',\n    'event_fake_traffic':'80096EF60C186574E0533300000ADBA5',\n    'event_get_weight_acc':'800970AC1FDC683CE0533300000AF1B0',\n    'event_min_weight':'875C3EB5C9DD092DE055000000000001',\n    'main_host':'http://ettn.apex.rest/ords/ettn',\n    'camera_url':'http://infoindustria.com.ua/wp-content/uploads/2016/08/zerno-mashina-300x225.jpg',\n    'event_url':'/iot_cli/events/log',\n    'state_url':'/iot_cli/device',\n    'snapshot_url':'/iot_cli/events/snapshot',\n    'maxWeight':40000,\n    'maxDuration':20000,\n    'minWeight':0,\n    'checkHealthTimeout':3000,\n    'minTriggerWeight':200\n}\nmsg.payload = device_config;\n// flow.set('scale_id','80096CB0EFD83B63E0533300000A4334');\n// flow.set('event_move_in_id','80096D9ABE7F68F3E0533300000A6C0D');\n// flow.set('event_move_out_id','80096D9ABE8068F3E0533300000A6C0D');\n// flow.set('event_max_weight_id','85A255F950F9BEF4E0533300000AC45D');\n// flow.set('event_off_id','85A2CC4570292DD1E0533300000A0C94');\n// flow.set('event_on_id', '85A2CC45702A2DD1E0533300000A0C94');\n// flow.set('event_max_duration','8642EE858DE89BAAE0533300000AFCC7');\n// flow.set('main_host','http://prod.apex.rest/ords/ettn');\n// flow.set('event_url','/iot_cli/events/log');\n// flow.set('state_url','/v1/device');\n// flow.set('maxWeight',40000);\n// flow.set('maxDuration',20000);\n// flow.set('checkHealthTimeout',3000);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 299.9999694824219,
        "y": 99.99999237060547,
        "wires": [
            [
                "ca36a90e.ab6a98"
            ]
        ]
    },
    {
        "id": "9f2d9db8.20b56",
        "type": "debug",
        "z": "ff28ef7c.bc9d7",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 100,
        "y": 320,
        "wires": []
    },
    {
        "id": "cb8b227f.3e8dd8",
        "type": "switch",
        "z": "ff28ef7c.bc9d7",
        "name": "waybill",
        "property": "metadata.waybill",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 580,
        "y": 280,
        "wires": [
            [
                "5385e689.81d99"
            ]
        ]
    },
    {
        "id": "5385e689.81d99",
        "type": "function",
        "z": "ff28ef7c.bc9d7",
        "name": "move in",
        "func": "msg.event_id = flow.get('event_fake_traffic');\nmsg.description = 'Холостий проїзд по вагам. Транзакція ' + msg.metadata.prevTransaction;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 720,
        "y": 280,
        "wires": [
            [
                "afc0cdb8.a726f",
                "ca11f7fd.d70f7"
            ]
        ]
    },
    {
        "id": "ca11f7fd.d70f7",
        "type": "debug",
        "z": "ff28ef7c.bc9d7",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 930,
        "y": 280,
        "wires": []
    },
    {
        "id": "c1d9c1c7.504fb8",
        "type": "http in",
        "z": "ff28ef7c.bc9d7",
        "name": "",
        "url": "/api/platform/getWeight",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 740,
        "wires": [
            [
                "c8a22dea.1e164",
                "93c30d44.612558"
            ]
        ]
    },
    {
        "id": "f9755cd4.c5c5f",
        "type": "http response",
        "z": "ff28ef7c.bc9d7",
        "name": "",
        "x": 530,
        "y": 740,
        "wires": []
    },
    {
        "id": "93c30d44.612558",
        "type": "function",
        "z": "ff28ef7c.bc9d7",
        "name": "response",
        "func": "msg.payload = flow.get('transactionMetadata');\nmsg.payload.sub_weight = flow.get('sub_weight_2');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 360,
        "y": 780,
        "wires": [
            [
                "f9755cd4.c5c5f",
                "470e544a.345874"
            ]
        ]
    },
    {
        "id": "470e544a.345874",
        "type": "debug",
        "z": "ff28ef7c.bc9d7",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 550,
        "y": 780,
        "wires": []
    },
    {
        "id": "e65becf2.6f36b8",
        "type": "link out",
        "z": "ff28ef7c.bc9d7",
        "name": "processing",
        "links": [
            "11982baa.6bc00c"
        ],
        "x": 340,
        "y": 300,
        "wires": []
    },
    {
        "id": "bfae188f.61d91",
        "type": "link out",
        "z": "ff28ef7c.bc9d7",
        "name": "processing event",
        "links": [
            "f0da2d7d.e5e8c"
        ],
        "x": 1120,
        "y": 340,
        "wires": []
    },
    {
        "id": "f31ea76d.88682",
        "type": "debug",
        "z": "ff28ef7c.bc9d7",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 1270,
        "y": 580,
        "wires": []
    },
    {
        "id": "6c553406.f86b74",
        "type": "debug",
        "z": "ff28ef7c.bc9d7",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 1290,
        "y": 440,
        "wires": []
    },
    {
        "id": "2f33c250.ddae8e",
        "type": "debug",
        "z": "ff28ef7c.bc9d7",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 1140,
        "y": 280,
        "wires": []
    },
    {
        "id": "c16187c0.c5f",
        "type": "switch",
        "z": "ff28ef7c.bc9d7",
        "name": "switch min weight",
        "property": "transactionHasMinWeight",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 390,
        "y": 480,
        "wires": [
            [
                "ea626fa9.b12728"
            ]
        ]
    },
    {
        "id": "ea626fa9.b12728",
        "type": "function",
        "z": "ff28ef7c.bc9d7",
        "name": "transactionHasMinWeight",
        "func": "msg.event_id = flow.get('event_min_weight');\nmsg.description = 'Перевищена мінімально-допустима вага: ' + msg.metadata.weight;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 630,
        "y": 480,
        "wires": [
            [
                "afc0cdb8.a726f"
            ]
        ]
    },
    {
        "id": "47af1e0a.b48f5",
        "type": "switch",
        "z": "ff28ef7c.bc9d7",
        "name": "take snapshot",
        "property": "needSnapshot",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 1290,
        "y": 500,
        "wires": [
            [
                "d84afe69.cf6978"
            ]
        ]
    },
    {
        "id": "3c7283d9.878bec",
        "type": "http request",
        "z": "ff28ef7c.bc9d7",
        "name": "get a snapshot",
        "method": "GET",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 1640,
        "y": 500,
        "wires": [
            [
                "ef9d0575.68eab8"
            ]
        ]
    },
    {
        "id": "d84afe69.cf6978",
        "type": "function",
        "z": "ff28ef7c.bc9d7",
        "name": "get camera url",
        "func": "msg.url = flow.get('camera_url');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1460,
        "y": 500,
        "wires": [
            [
                "3c7283d9.878bec",
                "494cbc0a.2136d4"
            ]
        ]
    },
    {
        "id": "ef9d0575.68eab8",
        "type": "function",
        "z": "ff28ef7c.bc9d7",
        "name": "snapshot payload",
        "func": "var event_id = msg.event_id;\nvar scale_id = flow.get('scale_id');\nmsg.payload = {\n    'event':{\n        'id':msg.event_id\n    },\n    'devices':[{'id':scale_id}],\n    'snapshot':msg.payload,\n    'ext':'jpeg'\n}\n\nmsg.headers = {\n    \"content-type\":\"application/json\"\n}\n\nmsg.url = flow.get('main_host')+flow.get('snapshot_url');\nmsg.main_host = flow.get('main_host');\nmsg.snapshot_url = flow.get('snapshot_url');\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1830,
        "y": 500,
        "wires": [
            [
                "66a7a25.3c5595c"
            ]
        ]
    },
    {
        "id": "66a7a25.3c5595c",
        "type": "http request",
        "z": "ff28ef7c.bc9d7",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "url": "send a snapshot",
        "tls": "",
        "x": 2030,
        "y": 500,
        "wires": [
            [
                "5e543a44.6a05d4"
            ]
        ]
    },
    {
        "id": "5e543a44.6a05d4",
        "type": "debug",
        "z": "ff28ef7c.bc9d7",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 2220,
        "y": 500,
        "wires": []
    },
    {
        "id": "494cbc0a.2136d4",
        "type": "debug",
        "z": "ff28ef7c.bc9d7",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 1500,
        "y": 360,
        "wires": []
    },
    {
        "id": "595dd2.e0bf723",
        "type": "http in",
        "z": "ff28ef7c.bc9d7",
        "name": "",
        "url": "/api/platform/getSimpleWeight",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 900,
        "wires": [
            [
                "17ed49ec.1d10e6"
            ]
        ]
    },
    {
        "id": "17ed49ec.1d10e6",
        "type": "function",
        "z": "ff28ef7c.bc9d7",
        "name": "response",
        "func": "msg.payload = flow.get('transactionMetadata').weight;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 380,
        "y": 840,
        "wires": [
            [
                "fdbb7372.e69238"
            ]
        ]
    },
    {
        "id": "fdbb7372.e69238",
        "type": "http response",
        "z": "ff28ef7c.bc9d7",
        "name": "",
        "x": 528,
        "y": 871,
        "wires": []
    },
    {
        "id": "9867690a.6ef58",
        "type": "function",
        "z": "ff28ef7c.bc9d7",
        "name": "fix avto config",
        "func": "flow.set('prevWeight_2',null);\nflow.set('sub_weight_2',0);\nflow.set('minTriggerWeight_2',80);\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 914.9996948242188,
        "y": 893.3331298828125,
        "wires": [
            []
        ]
    },
    {
        "id": "45a775ed.a31c0c",
        "type": "function",
        "z": "ff28ef7c.bc9d7",
        "name": "detec avto",
        "func": "var prevWeight = flow.get('prevWeight_2');\nvar weight = msg.payload;\nvar minTriggerWeight = flow.get('minTriggerWeight_2');\n\nvar is_minus = false;\n\n//transaction\nif (prevWeight === null){\n    prevWeight = msg.payload;    \n}else{\n    if((prevWeight <= 80) && (weight > 80) && (weight > minTriggerWeight)){\n        //start of transaction\n        transaction = Date.now();\n        msg.on = true;\n        flow.set('transaction_2',transaction);\n    }else if((prevWeight > 80) && (weight <=80)){\n        //transaction = 0;\n        msg.on = false;\n        transactionData = [];\n    }\n    if((prevWeight < 0) && ((weight-prevWeight) > minTriggerWeight)){\n        //start of transaction\n        is_minus = true;\n        msg.prevWeight = prevWeight;\n    }\n}\n\n//result\nmsg.metadata = {\n    'weight':weight,\n    'prevWeight':prevWeight,\n    'on':msg.on,\n    'stable':msg.stable\n\n}\nflow.set('prevWeight_2',weight);\nflow.set('transactionMetadata_2',msg.metadata);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 778.333251953125,
        "y": 966.6666259765625,
        "wires": [
            [
                "8d98bcb8.8bca78",
                "3e04c69a.6503da"
            ]
        ]
    },
    {
        "id": "30dff359.d6647c",
        "type": "function",
        "z": "ff28ef7c.bc9d7",
        "name": "move in",
        "func": "msg.description = 'Заїзд на ваги. Поточна вага: ' + msg.metadata.weight;\n\n//add prewweight\n\nflow.set('sub_weight_2',msg.metadata.prevWeight);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1088.333251953125,
        "y": 946.6666259765625,
        "wires": [
            [
                "823e2c09.9af848",
                "412bf1fa.6e873"
            ]
        ]
    },
    {
        "id": "d30dea74.658e3",
        "type": "function",
        "z": "ff28ef7c.bc9d7",
        "name": "move out",
        "func": "msg.description = 'Зїзд з ваг. Поточна вага: ' + msg.metadata.weight;\nflow.set('sub_weight_2',0);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1088.333251953125,
        "y": 986.6666259765625,
        "wires": [
            [
                "8fffd7ae.1d7de"
            ]
        ]
    },
    {
        "id": "8d98bcb8.8bca78",
        "type": "switch",
        "z": "ff28ef7c.bc9d7",
        "name": "switch move",
        "property": "on",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 938.333251953125,
        "y": 966.6666259765625,
        "wires": [
            [
                "30dff359.d6647c"
            ],
            [
                "d30dea74.658e3"
            ]
        ]
    },
    {
        "id": "823e2c09.9af848",
        "type": "debug",
        "z": "ff28ef7c.bc9d7",
        "name": "move in",
        "active": false,
        "console": false,
        "complete": "true",
        "x": 1248.333251953125,
        "y": 946.6666259765625,
        "wires": []
    },
    {
        "id": "8fffd7ae.1d7de",
        "type": "debug",
        "z": "ff28ef7c.bc9d7",
        "name": "move out",
        "active": false,
        "console": false,
        "complete": "true",
        "x": 1248.333251953125,
        "y": 986.6666259765625,
        "wires": []
    },
    {
        "id": "481a726b.e8bf3c",
        "type": "inject",
        "z": "ff28ef7c.bc9d7",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": true,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 764.9999389648438,
        "y": 896.6666564941406,
        "wires": [
            [
                "9867690a.6ef58"
            ]
        ]
    },
    {
        "id": "412bf1fa.6e873",
        "type": "function",
        "z": "ff28ef7c.bc9d7",
        "name": "",
        "func": "var detecWeightIn = flow.get('sub_weight_2');\nmsg.payload = detecWeightIn + \", \\n\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1090.833251953125,
        "y": 890.0000305175781,
        "wires": [
            [
                "81928961.c9cbf"
            ]
        ]
    },
    {
        "id": "81928961.c9cbf",
        "type": "file",
        "z": "ff28ef7c.bc9d7",
        "name": "",
        "filename": "detec.txt",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "x": 1239.166748046875,
        "y": 885.0000610351562,
        "wires": [
            []
        ]
    },
    {
        "id": "3e04c69a.6503da",
        "type": "debug",
        "z": "ff28ef7c.bc9d7",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 949.1665649414062,
        "y": 1036.6665649414062,
        "wires": []
    },
    {
        "id": "1b0ec212.b7ec36",
        "type": "http response",
        "z": "ff28ef7c.bc9d7",
        "name": "",
        "x": 525.8333333333333,
        "y": 1209.9999999999998,
        "wires": []
    },
    {
        "id": "89e61135.8e628",
        "type": "http in",
        "z": "ff28ef7c.bc9d7",
        "name": "",
        "url": "/api/platform/detecFile",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 414.16668701171875,
        "y": 1068.3333740234375,
        "wires": [
            [
                "76438667.f36658"
            ]
        ]
    },
    {
        "id": "76438667.f36658",
        "type": "file in",
        "z": "ff28ef7c.bc9d7",
        "name": "",
        "filename": "detec.txt",
        "format": "utf8",
        "x": 414.16666666666663,
        "y": 1126.6666666666665,
        "wires": [
            [
                "1b0ec212.b7ec36"
            ]
        ]
    },
    {
        "id": "11982baa.6bc00c",
        "type": "link in",
        "z": "52049de1.4fda5c",
        "name": "dashboard",
        "links": [
            "e65becf2.6f36b8",
            "30939ebe.d49e0a",
            "9bb81a14.cf3438",
            "1255d549.866ae3"
        ],
        "x": 80,
        "y": 100,
        "wires": [
            [
                "e6a5513d.b7ce2",
                "78458bde.c97444",
                "653bcdcb.4a7dcc",
                "e515831b.2e09f",
                "65da81d3.4e5348",
                "ee5e13bf.273ae8"
            ]
        ]
    },
    {
        "id": "e6a5513d.b7ce2",
        "type": "ui_gauge",
        "z": "52049de1.4fda5c",
        "name": "",
        "group": "9277d5e4.5a8b7",
        "order": 0,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Weight",
        "label": "kg",
        "format": "{{value}} kg",
        "min": 0,
        "max": "60000",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "x": 210,
        "y": 20,
        "wires": []
    },
    {
        "id": "78458bde.c97444",
        "type": "ui_chart",
        "z": "52049de1.4fda5c",
        "name": "",
        "group": "9277d5e4.5a8b7",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "History",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "ymin": "0",
        "ymax": "60000",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "outputs": 2,
        "x": 210,
        "y": 60,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "eef8169e.88e64",
        "type": "ui_gauge",
        "z": "52049de1.4fda5c",
        "name": "",
        "group": "9885241c.570b28",
        "order": 0,
        "width": 0,
        "height": 0,
        "gtype": "wave",
        "title": "Time on scale",
        "label": "units",
        "format": "{{value}} seconds",
        "min": 0,
        "max": "30000",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "x": 350,
        "y": 100,
        "wires": []
    },
    {
        "id": "653bcdcb.4a7dcc",
        "type": "ui_text",
        "z": "52049de1.4fda5c",
        "group": "9885241c.570b28",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Stable",
        "format": "{{msg.metadata.stable}}",
        "layout": "row-spread",
        "x": 210,
        "y": 140,
        "wires": []
    },
    {
        "id": "e515831b.2e09f",
        "type": "ui_text",
        "z": "52049de1.4fda5c",
        "group": "9885241c.570b28",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "on / off truck on scale",
        "format": "{{msg.metadata.on}}",
        "layout": "row-spread",
        "x": 260,
        "y": 180,
        "wires": []
    },
    {
        "id": "65da81d3.4e5348",
        "type": "ui_text",
        "z": "52049de1.4fda5c",
        "group": "9885241c.570b28",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Max weight",
        "format": "{{msg.metadata.transactionMaxWeight}}",
        "layout": "row-spread",
        "x": 230,
        "y": 220,
        "wires": []
    },
    {
        "id": "ee5e13bf.273ae8",
        "type": "function",
        "z": "52049de1.4fda5c",
        "name": "duration",
        "func": "msg.payload = msg.metadata.duration;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 220,
        "y": 100,
        "wires": [
            [
                "eef8169e.88e64"
            ]
        ]
    },
    {
        "id": "ac2caaf8.5901a8",
        "type": "inject",
        "z": "4405ba9d.eb37b4",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 105.5,
        "y": 147,
        "wires": [
            [
                "45267066.bd645"
            ]
        ]
    },
    {
        "id": "f3379710.b544b",
        "type": "http request",
        "z": "4405ba9d.eb37b4",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "url": "10.10.190.180/api/slot/0/io/di",
        "tls": "",
        "x": 403.5,
        "y": 140,
        "wires": [
            [
                "d18856d7.449b88"
            ]
        ]
    },
    {
        "id": "d18856d7.449b88",
        "type": "debug",
        "z": "4405ba9d.eb37b4",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 556.5,
        "y": 137,
        "wires": []
    },
    {
        "id": "45267066.bd645",
        "type": "function",
        "z": "4405ba9d.eb37b4",
        "name": "DI_Status",
        "func": "msg.headers = {\n    \"Content-Type\": 'application/json',\n    \"Accept\": 'vdn.dac.v1'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 256.5,
        "y": 146,
        "wires": [
            [
                "f3379710.b544b"
            ]
        ]
    },
    {
        "id": "506fcafa.310474",
        "type": "inject",
        "z": "4405ba9d.eb37b4",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 103,
        "y": 206,
        "wires": [
            [
                "c79a730.9d24c9"
            ]
        ]
    },
    {
        "id": "5178ce31.ed398",
        "type": "http request",
        "z": "4405ba9d.eb37b4",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "url": "10.10.190.180/api/slot/0/io/do",
        "tls": "",
        "x": 426,
        "y": 205,
        "wires": [
            [
                "86c4f76b.d90c28"
            ]
        ]
    },
    {
        "id": "86c4f76b.d90c28",
        "type": "debug",
        "z": "4405ba9d.eb37b4",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 585,
        "y": 200,
        "wires": []
    },
    {
        "id": "c79a730.9d24c9",
        "type": "function",
        "z": "4405ba9d.eb37b4",
        "name": "DO_Status",
        "func": "msg.headers = {\n    \"Content-Type\": 'application/json',\n    \"Accept\": 'vdn.dac.v1'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 264,
        "y": 205,
        "wires": [
            [
                "5178ce31.ed398"
            ]
        ]
    },
    {
        "id": "310975a8.15aaca",
        "type": "http in",
        "z": "4405ba9d.eb37b4",
        "name": "",
        "url": "/getDiStatus",
        "method": "get",
        "swaggerDoc": "",
        "x": 141.6666717529297,
        "y": 267.77777099609375,
        "wires": [
            [
                "8611c3fd.107e68"
            ]
        ]
    },
    {
        "id": "34006e17.750dfa",
        "type": "http response",
        "z": "4405ba9d.eb37b4",
        "name": "",
        "x": 556.111083984375,
        "y": 264.4444580078125,
        "wires": []
    },
    {
        "id": "8611c3fd.107e68",
        "type": "function",
        "z": "4405ba9d.eb37b4",
        "name": "",
        "func": "msg.payload = flow.get('di');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 403.3333740234375,
        "y": 272.2221984863281,
        "wires": [
            [
                "34006e17.750dfa"
            ]
        ]
    },
    {
        "id": "f2c7ebcf.c7345",
        "type": "http in",
        "z": "4405ba9d.eb37b4",
        "name": "",
        "url": "/getDoStatus",
        "method": "get",
        "swaggerDoc": "",
        "x": 144.2857666015625,
        "y": 321.5872802734375,
        "wires": [
            [
                "75ec60e2.3916c"
            ]
        ]
    },
    {
        "id": "16e37357.3005ed",
        "type": "http response",
        "z": "4405ba9d.eb37b4",
        "name": "",
        "x": 594.2857360839844,
        "y": 318.25396728515625,
        "wires": []
    },
    {
        "id": "75ec60e2.3916c",
        "type": "function",
        "z": "4405ba9d.eb37b4",
        "name": "",
        "func": "msg.payload = flow.get('do');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 451.5080261230469,
        "y": 316.03173828125,
        "wires": [
            [
                "16e37357.3005ed"
            ]
        ]
    },
    {
        "id": "1aec7f0a.469af1",
        "type": "http in",
        "z": "4405ba9d.eb37b4",
        "name": "",
        "url": "/gettest",
        "method": "get",
        "swaggerDoc": "",
        "x": 133.96829223632812,
        "y": 373.8094787597656,
        "wires": [
            [
                "bdc9e801.86e508"
            ]
        ]
    },
    {
        "id": "bdc9e801.86e508",
        "type": "function",
        "z": "4405ba9d.eb37b4",
        "name": "",
        "func": "msg.payload = {\n    \"48\": flow.get('48'),\n    \"36\": flow.get('36'),\n    \"68\": flow.get('68'),\n    \"52\": flow.get('52'),\n    \"32\": flow.get('32'),\n    \"16_C\": flow.get('16')\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 451.1905517578125,
        "y": 368.2539367675781,
        "wires": [
            [
                "1f5bb152.e2e71f"
            ]
        ]
    },
    {
        "id": "1f5bb152.e2e71f",
        "type": "http response",
        "z": "4405ba9d.eb37b4",
        "name": "",
        "x": 593.96826171875,
        "y": 370.4761657714844,
        "wires": []
    },
    {
        "id": "63414c81.7fd254",
        "type": "inject",
        "z": "e000942c.4e9718",
        "name": "",
        "repeat": "1",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 280,
        "wires": [
            [
                "2cb909b0.16f0c6"
            ]
        ]
    },
    {
        "id": "a640d678.88d208",
        "type": "tcp request",
        "z": "e000942c.4e9718",
        "name": "",
        "server": "10.10.15.208",
        "port": "1705",
        "out": "char",
        "splitc": "\\n",
        "x": 420,
        "y": 280,
        "wires": [
            [
                "11d1ab02.dba8e5"
            ]
        ]
    },
    {
        "id": "2cb909b0.16f0c6",
        "type": "function",
        "z": "e000942c.4e9718",
        "name": "",
        "func": "msg.payload = \"S\" + String.fromCharCode(13) + String.fromCharCode(10);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 250,
        "y": 280,
        "wires": [
            [
                "a640d678.88d208",
                "e58122ad.b93348"
            ]
        ]
    },
    {
        "id": "11d1ab02.dba8e5",
        "type": "function",
        "z": "e000942c.4e9718",
        "name": "",
        "func": "msg.payload = msg.payload.toString();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 590,
        "y": 280,
        "wires": [
            [
                "4fc8c0c6.a43648",
                "b352930c.63cf5"
            ]
        ]
    },
    {
        "id": "e58122ad.b93348",
        "type": "debug",
        "z": "e000942c.4e9718",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 390,
        "y": 240,
        "wires": []
    },
    {
        "id": "7c8aeab2.010aec",
        "type": "function",
        "z": "e000942c.4e9718",
        "name": "Модель весов",
        "func": "flow.set('inputString',\"CMD\");\nflow.set('parser',function(v){\n       v = v.replace(\"S\",\"\");\n       v = v.replace(\"S\",\"\");\n       v = v.replace(\"kg\",\"\");\n       return Number(v);\n       //return v;\n    }\n  );\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 260,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "4fc8c0c6.a43648",
        "type": "function",
        "z": "e000942c.4e9718",
        "name": "GET WEIGHT",
        "func": "msg.payload = flow.get('parser')(msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 740,
        "y": 280,
        "wires": [
            [
                "7c8468d8.2be09",
                "46346775.90589"
            ]
        ]
    },
    {
        "id": "7baba796.d87ce8",
        "type": "comment",
        "z": "e000942c.4e9718",
        "name": "Device level",
        "info": "",
        "x": 110,
        "y": 220,
        "wires": []
    },
    {
        "id": "89fc8764.22644",
        "type": "inject",
        "z": "e000942c.4e9718",
        "name": "init",
        "repeat": "",
        "crontab": "",
        "once": true,
        "topic": "",
        "payload": "init",
        "payloadType": "str",
        "x": 90,
        "y": 100,
        "wires": [
            [
                "7c8aeab2.010aec"
            ]
        ]
    },
    {
        "id": "58267ee3.cb196",
        "type": "comment",
        "z": "e000942c.4e9718",
        "name": "INITIALIZING",
        "info": "",
        "x": 110,
        "y": 60,
        "wires": []
    },
    {
        "id": "7c8468d8.2be09",
        "type": "link out",
        "z": "e000942c.4e9718",
        "name": "",
        "links": [
            "20ede6e4.a1c78a"
        ],
        "x": 873,
        "y": 280,
        "wires": []
    },
    {
        "id": "b352930c.63cf5",
        "type": "debug",
        "z": "e000942c.4e9718",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 729,
        "y": 317,
        "wires": []
    },
    {
        "id": "46346775.90589",
        "type": "debug",
        "z": "e000942c.4e9718",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 870,
        "y": 220,
        "wires": []
    },
    {
        "id": "582b50f4.2514d",
        "type": "debug",
        "z": "e000942c.4e9718",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 490,
        "y": 120,
        "wires": []
    },
    {
        "id": "df8687f2.2f5fb",
        "type": "file",
        "z": "bdf26ad7.fc049",
        "name": "deivce_config",
        "filename": "deivce_config.json",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "x": 400,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "20ede6e4.a1c78a",
        "type": "link in",
        "z": "bdf26ad7.fc049",
        "name": "weight Jd",
        "links": [
            "7c8468d8.2be09"
        ],
        "x": 55,
        "y": 400,
        "wires": [
            [
                "42f75551.5fe7cc",
                "3b7ac41b.ecf2b4"
            ]
        ]
    },
    {
        "id": "42f75551.5fe7cc",
        "type": "function",
        "z": "bdf26ad7.fc049",
        "name": "main module",
        "func": "var prevWeight = flow.get('prevWeight');\nvar transaction = flow.get('transaction');\nvar transactionData = flow.get('transactionData');\nvar transactionMaxWeight = flow.get('transactionMaxWeight');\nvar transactionHasMaxWeight = flow.get('transactionHasMaxWeight');\nvar transactionHasMinWeight = flow.get('transactionHasMinWeight');\nvar transactionHasMaxDuration = flow.get('transactionHasMaxDuration');\nvar waybill = flow.get('transactionWaybill');\nvar weight = msg.payload;\nvar stableSize = 5;\nvar duration = 0;\nvar maxWeight = flow.get('maxWeight');\nvar maxDuration = flow.get('maxDuration');\nvar prevTransaction = transaction;\nvar minWeight = flow.get('minWeight');\nvar minTriggerWeight = flow.get('minTriggerWeight');\n\n//transaction\nif (prevWeight === null){\n    prevWeight = msg.payload;    \n}else{\n    if((prevWeight <= 0) && (weight > 0) && (weight > minTriggerWeight)){\n        //start of transaction\n        transaction = Date.now();\n        msg.on = true;\n        flow.set('transaction',transaction);\n    }else if((prevWeight > 0) && (weight <=0) && (transaction)){\n        transaction = 0;\n        msg.on = false;\n        transactionData = [];\n        flow.set('transaction',transaction);\n        flow.set('transactionMaxWeight',null);\n        flow.set('transactionHasMaxWeight',null);\n        flow.set('transactionHasMinWeight',null);\n        flow.set('transactionHasMaxDuration',null);\n        flow.set('transactionWaybill',null);\n        flow.set('transactionMetadata',null);\n    }else if((transaction === null) && (weight>0) && (weight > minTriggerWeight)){\n        transaction = Date.now();\n        flow.set('transaction',transaction);\n    }\n}\n\nif (transaction > 0){\n    transactionData.push(weight);    \n\n    //stable\n    if(transactionData.length > stableSize+1){\n        var stabletmp = true;\n        for (var i = transactionData.length-1; i > transactionData.length-1-stableSize; i--){\n            if (transactionData[i] !== transactionData[i-1]){\n                stabletmp = false;\n                msg.stable = stabletmp;\n                break;\n            }\n            msg.stable = stabletmp;\n        }\n    }else{\n        msg.stable = false;\n    }\n\n    //duration & transactionMaxWeight\n    duration = (Number(Date.now()) - Number(transaction));\n    if( (weight>transactionMaxWeight) || (transactionMaxWeight === null)){\n        transactionMaxWeight = weight;\n        flow.set(\"transactionMaxWeight\",transactionMaxWeight);\n    }\n    \n    if(!transactionHasMaxWeight && weight > maxWeight){\n        msg.transactionHasMaxWeight = true;\n        flow.set('transactionHasMaxWeight',true);\n    }\n    \n    if(!transactionHasMinWeight && weight < minWeight){\n        msg.transactionHasMinWeight = true;\n        flow.set('transactionHasMinWeight',true);\n    }\n    \n    //max duartion\n    if(!transactionHasMaxDuration && duration > maxDuration){\n        msg.transactionHasMaxDuration = true;\n        flow.set('transactionHasMaxDuration',true);\n    }\n}\n\n//result\nmsg.metadata = {\n    'weight':weight,\n    'prevWeight':prevWeight,\n    'prevTransaction':prevTransaction,\n    'transaction':transaction,\n    'on':msg.on,\n    'transactionDataCount':transactionData.length,\n    'stable':msg.stable,\n    'duration':duration,\n    'transactionMaxWeight':transactionMaxWeight,\n    'waybill':waybill\n}\nflow.set('transactionData',transactionData);\nflow.set('prevWeight',weight);\nflow.set('transactionMetadata',msg.metadata);\nflow.set('lasttimedata', new Date());\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 190,
        "y": 400,
        "wires": [
            [
                "abcaf54d.3e6428",
                "f236b8f4.ba52e8",
                "c03cd462.f4c2e",
                "226fd3b.d5176ac"
            ]
        ]
    },
    {
        "id": "a75058d4.5fe6e8",
        "type": "function",
        "z": "bdf26ad7.fc049",
        "name": "get weight from accounting system",
        "func": "var transactionMetada = flow.get('transactionMetadata');\nvar buisness_data = msg.req.query;\nmsg.metadata = Object.assign(transactionMetada,buisness_data);\nmsg.event_id = flow.get('event_get_weight_acc');\nflow.set('transactionWaybill',msg.req.query.waybill);\nmsg.description = 'Зважили в 1С. Поточна вага: ' + msg.metadata.weight+\" Номер авто: \"+buisness_data.truck_id+\" \"+buisness_data.truck2_id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 460,
        "y": 720,
        "wires": [
            [
                "2635fad5.12921e"
            ]
        ]
    },
    {
        "id": "abcaf54d.3e6428",
        "type": "switch",
        "z": "bdf26ad7.fc049",
        "name": "switch move",
        "property": "on",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 410,
        "y": 380,
        "wires": [
            [
                "81c2e01f.bcf778"
            ],
            [
                "9405f89d.409ef8",
                "3cf9305b.0b7ff"
            ]
        ]
    },
    {
        "id": "7c72e7b0.72dfc8",
        "type": "http request",
        "z": "bdf26ad7.fc049",
        "name": "EVENTS",
        "method": "POST",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 1160,
        "y": 460,
        "wires": [
            [
                "ff0d0781.777a6"
            ]
        ]
    },
    {
        "id": "2635fad5.12921e",
        "type": "function",
        "z": "bdf26ad7.fc049",
        "name": "events payload",
        "func": "var event_id = msg.event_id;\nvar scale_id = flow.get('scale_id');\nmsg.payload = {\n    'event':{\n        'id':msg.event_id\n    },\n    'devices':[{'id':scale_id}],\n    'data':msg.metadata,\n    'description':msg.description\n}\n\nmsg.headers = {\n    \"content-type\":\"application/json\"\n}\n\nmsg.url = flow.get('main_host')+flow.get('event_url');\nmsg.main_host = flow.get('main_host');\nmsg.event_url = flow.get('event_url');\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 960,
        "y": 460,
        "wires": [
            [
                "3f928702.d6b6"
            ]
        ]
    },
    {
        "id": "81c2e01f.bcf778",
        "type": "function",
        "z": "bdf26ad7.fc049",
        "name": "move in",
        "func": "msg.event_id = flow.get('event_move_in_id');\nmsg.description = 'Заїзд на ваги. Поточна вага: ' + msg.metadata.weight;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 600,
        "y": 340,
        "wires": [
            [
                "2635fad5.12921e"
            ]
        ]
    },
    {
        "id": "f236b8f4.ba52e8",
        "type": "switch",
        "z": "bdf26ad7.fc049",
        "name": "switch max weight",
        "property": "transactionHasMaxWeight",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 410,
        "y": 420,
        "wires": [
            [
                "80cb2cb0.5c2598"
            ]
        ]
    },
    {
        "id": "80cb2cb0.5c2598",
        "type": "function",
        "z": "bdf26ad7.fc049",
        "name": "transactionHasMaxWeight",
        "func": "msg.event_id = flow.get('event_max_weight_id');\nmsg.description = 'Перевищена максимально-допустима вага: ' + msg.metadata.weight;\nmsg.needSnapshot = true;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 650,
        "y": 420,
        "wires": [
            [
                "2635fad5.12921e"
            ]
        ]
    },
    {
        "id": "1612db3e.3e6185",
        "type": "inject",
        "z": "bdf26ad7.fc049",
        "name": "",
        "repeat": "1",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 640,
        "wires": [
            [
                "4da8b7bb.6f9f5"
            ]
        ]
    },
    {
        "id": "4da8b7bb.6f9f5",
        "type": "function",
        "z": "bdf26ad7.fc049",
        "name": "check scale health",
        "func": "var lastcheckHealth = flow.get('checkHealth');\nvar checkHealth = null;\nvar lasttimedata = flow.get('lasttimedata');\n\nvar currenttimedata = new Date();\n\nif ((currenttimedata - lasttimedata) > 3000){\n    checkHealth = false;\n} else {\n    checkHealth = true;\n}\n\nflow.set(\"checkHealth\",checkHealth);\n\nif (lastcheckHealth != checkHealth){\n    msg.checkHealth = checkHealth;\n}else{\n    msg.checkHealth = null;\n}\nmsg.payload = checkHealth;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 310,
        "y": 640,
        "wires": [
            [
                "d77290b3.ebf058"
            ]
        ]
    },
    {
        "id": "d77290b3.ebf058",
        "type": "switch",
        "z": "bdf26ad7.fc049",
        "name": "",
        "property": "checkHealth",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 490,
        "y": 600,
        "wires": [
            [
                "ebabc522.ef17d8"
            ],
            [
                "5bab9093.cc8d6"
            ]
        ]
    },
    {
        "id": "5bab9093.cc8d6",
        "type": "function",
        "z": "bdf26ad7.fc049",
        "name": "off",
        "func": "msg.event_id = flow.get('event_off_id');\nmsg.description = 'Прилад відключено';\nmsg.metadata = {\n    'state':msg.checkHealth\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 630,
        "y": 580,
        "wires": [
            [
                "2635fad5.12921e"
            ]
        ]
    },
    {
        "id": "ebabc522.ef17d8",
        "type": "function",
        "z": "bdf26ad7.fc049",
        "name": "on",
        "func": "msg.event_id = flow.get('event_on_id');\nmsg.description = 'Прилад підключено';\nmsg.metadata = {\n    'state':msg.checkHealth\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 630,
        "y": 540,
        "wires": [
            [
                "2635fad5.12921e"
            ]
        ]
    },
    {
        "id": "e7379902.c7aba",
        "type": "function",
        "z": "bdf26ad7.fc049",
        "name": "main config",
        "func": "flow.set('prevWeight',null);\nflow.set('transaction',null);\nflow.set('transactionData',[]);\nflow.set('transactionMaxWeight',null);\nflow.set('transactionHasMinWeight',null);\nflow.set('transactionHasMaxWeight',null);\nflow.set('transactionHasMaxDuration',null);\nflow.set('lasttimedata', new Date());\nflow.set('checkHealth',null);\nflow.set('transactionWaybill',null);\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 390,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "aa6d8a11.ccd558",
        "type": "inject",
        "z": "bdf26ad7.fc049",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": true,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 110,
        "y": 240,
        "wires": [
            [
                "e7379902.c7aba",
                "8ca9840b.248c6"
            ]
        ]
    },
    {
        "id": "43fde46b.bddab4",
        "type": "http request",
        "z": "bdf26ad7.fc049",
        "name": "STATE",
        "method": "POST",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 1150,
        "y": 600,
        "wires": [
            [
                "d00ae1e5.225928"
            ]
        ]
    },
    {
        "id": "9b05916e.926bf8",
        "type": "function",
        "z": "bdf26ad7.fc049",
        "name": "device config",
        "func": "var device_config = JSON.parse(msg.payload);\n\nflow.set('scale_id',device_config.scale_id);\nflow.set('event_move_in_id',device_config.event_move_in_id);\nflow.set('event_move_out_id',device_config.event_move_out_id);\nflow.set('event_max_weight_id',device_config.event_max_weight_id);\nflow.set('event_off_id',device_config.event_off_id);\nflow.set('event_on_id', device_config.event_on_id);\nflow.set('event_max_duration',device_config.event_max_duration);\nflow.set('event_fake_traffic',device_config.event_fake_traffic);\nflow.set('main_host',device_config.main_host);\nflow.set('event_url',device_config.event_url);\nflow.set('state_url',device_config.state_url);\nflow.set('maxWeight',device_config.maxWeight);\nflow.set('minWeight',device_config.minWeight);\nflow.set('maxDuration',device_config.maxDuration);\nflow.set('checkHealthTimeout',device_config.checkHealthTimeout);\nflow.set('event_get_weight_acc',device_config.event_get_weight_acc);\nflow.set('event_min_weight',device_config.event_min_weight);\nflow.set('minTriggerWeight',device_config.minTriggerWeight);\nflow.set('snapshot_url',device_config.minTriggerWeight);\nflow.set('camera_url',device_config.camera_url);\n\n\n\n// flow.set('scale_id','80096CB0EFD83B63E0533300000A4334');\n// flow.set('event_move_in_id','80096D9ABE7F68F3E0533300000A6C0D');\n// flow.set('event_move_out_id','80096D9ABE8068F3E0533300000A6C0D');\n// flow.set('event_max_weight_id','85A255F950F9BEF4E0533300000AC45D');\n// flow.set('event_off_id','85A2CC4570292DD1E0533300000A0C94');\n// flow.set('event_on_id', '85A2CC45702A2DD1E0533300000A0C94');\n// flow.set('event_max_duration','8642EE858DE89BAAE0533300000AFCC7');\n// flow.set('main_host','http://prod.apex.rest/ords/ettn');\n// flow.set('event_url','/iot_cli/events/log');\n// flow.set('state_url','/v1/device');\n// flow.set('maxWeight',40000);\n// flow.set('maxDuration',20000);\n// flow.set('checkHealthTimeout',3000);\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 690,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "9405f89d.409ef8",
        "type": "function",
        "z": "bdf26ad7.fc049",
        "name": "move out",
        "func": "msg.event_id = flow.get('event_move_out_id');\nmsg.description = 'Зїзд з ваг. Поточна вага: ' + msg.metadata.weight;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 600,
        "y": 380,
        "wires": [
            [
                "2635fad5.12921e"
            ]
        ]
    },
    {
        "id": "c03cd462.f4c2e",
        "type": "switch",
        "z": "bdf26ad7.fc049",
        "name": "max duration",
        "property": "transactionHasMaxDuration",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 390,
        "y": 460,
        "wires": [
            [
                "5d37f1f5.74dcd8"
            ]
        ]
    },
    {
        "id": "5d37f1f5.74dcd8",
        "type": "function",
        "z": "bdf26ad7.fc049",
        "name": "transaction has max duration",
        "func": "msg.event_id = flow.get('event_max_duration');\nmsg.description = 'Перевищено максимальний час находження на вагах: ' + msg.metadata.duration/1000;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 660,
        "y": 460,
        "wires": [
            [
                "2635fad5.12921e"
            ]
        ]
    },
    {
        "id": "a7849864.5ceb",
        "type": "http in",
        "z": "bdf26ad7.fc049",
        "name": "",
        "url": "/firmware",
        "method": "post",
        "swaggerDoc": "",
        "x": 160,
        "y": 180,
        "wires": [
            [
                "df8687f2.2f5fb"
            ]
        ]
    },
    {
        "id": "4b967d6d.2fa50c",
        "type": "file in",
        "z": "bdf26ad7.fc049",
        "name": "deivce_config",
        "filename": "deivce_config.json",
        "format": "utf8",
        "x": 500,
        "y": 220,
        "wires": [
            [
                "9b05916e.926bf8"
            ]
        ]
    },
    {
        "id": "58e658a7.9450f8",
        "type": "http in",
        "z": "bdf26ad7.fc049",
        "name": "",
        "url": "/serial",
        "method": "get",
        "swaggerDoc": "",
        "x": 140,
        "y": 60,
        "wires": [
            [
                "4792ea1a.cc6ad4"
            ]
        ]
    },
    {
        "id": "4792ea1a.cc6ad4",
        "type": "exec",
        "z": "bdf26ad7.fc049",
        "command": "cat /proc/cpuinfo",
        "addpay": true,
        "append": "| grep Serial",
        "useSpawn": "",
        "timer": "5",
        "name": "",
        "x": 370,
        "y": 60,
        "wires": [
            [
                "2646afe.a5da6d",
                "afb0e2e2.001c38"
            ],
            [],
            []
        ]
    },
    {
        "id": "2646afe.a5da6d",
        "type": "http response",
        "z": "bdf26ad7.fc049",
        "name": "",
        "x": 570,
        "y": 40,
        "wires": []
    },
    {
        "id": "afb0e2e2.001c38",
        "type": "function",
        "z": "bdf26ad7.fc049",
        "name": "",
        "func": "msg.payload = msg.payload.split(':')[1].replace('\\n','').replace(' ','');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 560,
        "y": 120,
        "wires": [
            [
                "53547164.7ca398"
            ]
        ]
    },
    {
        "id": "53547164.7ca398",
        "type": "debug",
        "z": "bdf26ad7.fc049",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 725,
        "y": 118,
        "wires": []
    },
    {
        "id": "f426f7b1.c1eff",
        "type": "inject",
        "z": "bdf26ad7.fc049",
        "name": "DEMO",
        "repeat": "",
        "crontab": "",
        "once": true,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 110,
        "y": 120,
        "wires": [
            [
                "d53de64b.5fe2d"
            ]
        ]
    },
    {
        "id": "d53de64b.5fe2d",
        "type": "function",
        "z": "bdf26ad7.fc049",
        "name": "DEMO Data",
        "func": "var device_config = {\n    'scale_id':'889DEB1AA0C57FC8E055000000000001',\n    'event_move_in_id':'80096D9ABE7F68F3E0533300000A6C0D',\n    'event_move_out_id':'80096D9ABE8068F3E0533300000A6C0D',\n    'event_max_weight_id':'85A255F950F9BEF4E0533300000AC45D',\n    'event_off_id':'85A2CC4570292DD1E0533300000A0C94',\n    'event_max_duration':'8642EE858DE89BAAE0533300000AFCC7',\n    'event_fake_traffic':'80096EF60C186574E0533300000ADBA5',\n    'event_get_weight_acc':'800970AC1FDC683CE0533300000AF1B0',\n    'event_min_weight':'875C3EB5C9DD092DE055000000000001',\n    'main_host':'http://ettn.apex.rest/ords/ettn',\n    'camera_url':'http://infoindustria.com.ua/wp-content/uploads/2016/08/zerno-mashina-300x225.jpg',\n    'event_url':'/iot_cli/events/log',\n    'state_url':'/iot_cli/device',\n    'snapshot_url':'/iot_cli/events/snapshot',\n    'maxWeight':40000,\n    'maxDuration':20000,\n    'minWeight':0,\n    'checkHealthTimeout':3000,\n    'minTriggerWeight':200\n}\nmsg.payload = device_config;\n// flow.set('scale_id','80096CB0EFD83B63E0533300000A4334');\n// flow.set('event_move_in_id','80096D9ABE7F68F3E0533300000A6C0D');\n// flow.set('event_move_out_id','80096D9ABE8068F3E0533300000A6C0D');\n// flow.set('event_max_weight_id','85A255F950F9BEF4E0533300000AC45D');\n// flow.set('event_off_id','85A2CC4570292DD1E0533300000A0C94');\n// flow.set('event_on_id', '85A2CC45702A2DD1E0533300000A0C94');\n// flow.set('event_max_duration','8642EE858DE89BAAE0533300000AFCC7');\n// flow.set('main_host','http://prod.apex.rest/ords/ettn');\n// flow.set('event_url','/iot_cli/events/log');\n// flow.set('state_url','/v1/device');\n// flow.set('maxWeight',40000);\n// flow.set('maxDuration',20000);\n// flow.set('checkHealthTimeout',3000);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 319.9999694824219,
        "y": 119.99999237060547,
        "wires": [
            [
                "df8687f2.2f5fb"
            ]
        ]
    },
    {
        "id": "3b7ac41b.ecf2b4",
        "type": "debug",
        "z": "bdf26ad7.fc049",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 190,
        "y": 340,
        "wires": []
    },
    {
        "id": "3cf9305b.0b7ff",
        "type": "switch",
        "z": "bdf26ad7.fc049",
        "name": "waybill",
        "property": "metadata.waybill",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 600,
        "y": 300,
        "wires": [
            [
                "f2bb32cf.de545"
            ]
        ]
    },
    {
        "id": "f2bb32cf.de545",
        "type": "function",
        "z": "bdf26ad7.fc049",
        "name": "move in",
        "func": "msg.event_id = flow.get('event_fake_traffic');\nmsg.description = 'Холостий проїзд по вагам. Транзакція ' + msg.metadata.prevTransaction;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 740,
        "y": 300,
        "wires": [
            [
                "2635fad5.12921e",
                "653338cc.fc9458"
            ]
        ]
    },
    {
        "id": "653338cc.fc9458",
        "type": "debug",
        "z": "bdf26ad7.fc049",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 950,
        "y": 300,
        "wires": []
    },
    {
        "id": "c9fb80b2.f12a08",
        "type": "http in",
        "z": "bdf26ad7.fc049",
        "name": "",
        "url": "/api/platform/getWeightJd",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 720,
        "wires": [
            [
                "a75058d4.5fe6e8",
                "4d338038.59f998"
            ]
        ]
    },
    {
        "id": "cfa2d37a.0120f",
        "type": "http response",
        "z": "bdf26ad7.fc049",
        "name": "",
        "x": 550,
        "y": 760,
        "wires": []
    },
    {
        "id": "4d338038.59f998",
        "type": "function",
        "z": "bdf26ad7.fc049",
        "name": "response",
        "func": "msg.payload = flow.get('transactionMetadata');\nmsg.payload.sub_weight = flow.get('sub_weight_2');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 380,
        "y": 800,
        "wires": [
            [
                "cfa2d37a.0120f",
                "a3d90ed4.88d458"
            ]
        ]
    },
    {
        "id": "a3d90ed4.88d458",
        "type": "debug",
        "z": "bdf26ad7.fc049",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 570,
        "y": 800,
        "wires": []
    },
    {
        "id": "d00ae1e5.225928",
        "type": "debug",
        "z": "bdf26ad7.fc049",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 1290,
        "y": 600,
        "wires": []
    },
    {
        "id": "ff0d0781.777a6",
        "type": "debug",
        "z": "bdf26ad7.fc049",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 1310,
        "y": 460,
        "wires": []
    },
    {
        "id": "3f928702.d6b6",
        "type": "debug",
        "z": "bdf26ad7.fc049",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 1170,
        "y": 420,
        "wires": []
    },
    {
        "id": "226fd3b.d5176ac",
        "type": "switch",
        "z": "bdf26ad7.fc049",
        "name": "switch min weight",
        "property": "transactionHasMinWeight",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 410,
        "y": 500,
        "wires": [
            [
                "3d369ba9.32cacc"
            ]
        ]
    },
    {
        "id": "3d369ba9.32cacc",
        "type": "function",
        "z": "bdf26ad7.fc049",
        "name": "transactionHasMinWeight",
        "func": "msg.event_id = flow.get('event_min_weight');\nmsg.description = 'Перевищена мінімально-допустима вага: ' + msg.metadata.weight;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 650,
        "y": 500,
        "wires": [
            [
                "2635fad5.12921e"
            ]
        ]
    },
    {
        "id": "1d8f4b7f.848d25",
        "type": "switch",
        "z": "bdf26ad7.fc049",
        "name": "take snapshot",
        "property": "needSnapshot",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 1310,
        "y": 520,
        "wires": [
            [
                "25a00388.d688bc"
            ]
        ]
    },
    {
        "id": "4348cc2.7f50a34",
        "type": "http request",
        "z": "bdf26ad7.fc049",
        "name": "get a snapshot",
        "method": "GET",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 1660,
        "y": 520,
        "wires": [
            [
                "bfdaa5ed.d49e68"
            ]
        ]
    },
    {
        "id": "25a00388.d688bc",
        "type": "function",
        "z": "bdf26ad7.fc049",
        "name": "get camera url",
        "func": "msg.url = flow.get('camera_url');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1480,
        "y": 520,
        "wires": [
            [
                "4348cc2.7f50a34",
                "c57084ef.eb24a"
            ]
        ]
    },
    {
        "id": "bfdaa5ed.d49e68",
        "type": "function",
        "z": "bdf26ad7.fc049",
        "name": "snapshot payload",
        "func": "var event_id = msg.event_id;\nvar scale_id = flow.get('scale_id');\nmsg.payload = {\n    'event':{\n        'id':msg.event_id\n    },\n    'devices':[{'id':scale_id}],\n    'snapshot':msg.payload,\n    'ext':'jpeg'\n}\n\nmsg.headers = {\n    \"content-type\":\"application/json\"\n}\n\nmsg.url = flow.get('main_host')+flow.get('snapshot_url');\nmsg.main_host = flow.get('main_host');\nmsg.snapshot_url = flow.get('snapshot_url');\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1850,
        "y": 520,
        "wires": [
            [
                "552250e5.467f88"
            ]
        ]
    },
    {
        "id": "552250e5.467f88",
        "type": "http request",
        "z": "bdf26ad7.fc049",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "url": "send a snapshot",
        "tls": "",
        "x": 2050,
        "y": 520,
        "wires": [
            [
                "89042aba.91c4a"
            ]
        ]
    },
    {
        "id": "89042aba.91c4a",
        "type": "debug",
        "z": "bdf26ad7.fc049",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 2240,
        "y": 520,
        "wires": []
    },
    {
        "id": "c57084ef.eb24a",
        "type": "debug",
        "z": "bdf26ad7.fc049",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 1520,
        "y": 380,
        "wires": []
    },
    {
        "id": "58d7d326.cdab0c",
        "type": "http in",
        "z": "bdf26ad7.fc049",
        "name": "",
        "url": "/api/platform/getSimpleWeightJd",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 880,
        "wires": [
            [
                "6d0740cc.29cd68"
            ]
        ]
    },
    {
        "id": "6d0740cc.29cd68",
        "type": "function",
        "z": "bdf26ad7.fc049",
        "name": "response",
        "func": "msg.payload = flow.get('transactionMetadata').weight;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 420,
        "y": 880,
        "wires": [
            [
                "a82db7e3.fdbfc"
            ]
        ]
    },
    {
        "id": "a82db7e3.fdbfc",
        "type": "http response",
        "z": "bdf26ad7.fc049",
        "name": "",
        "x": 550,
        "y": 880,
        "wires": []
    },
    {
        "id": "8ca9840b.248c6",
        "type": "delay",
        "z": "bdf26ad7.fc049",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 320,
        "y": 220,
        "wires": [
            [
                "4b967d6d.2fa50c"
            ]
        ]
    },
    {
        "id": "699c6646.b0a9e",
        "type": "inject",
        "z": "114661a7.e8a2be",
        "name": "",
        "repeat": "1",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "inputString",
        "payloadType": "flow",
        "x": 130,
        "y": 200,
        "wires": [
            [
                "1fb3bde9.f10cda",
                "4f032dc.56dc6d4"
            ]
        ]
    },
    {
        "id": "516fd8fb.90d3e8",
        "type": "function",
        "z": "114661a7.e8a2be",
        "name": "GET WEIGHT",
        "func": "var payload = msg.payload;\nvar parser = flow.get('parser');\nvar currentWeight = parser(payload);\n\nflow.set('weigth_time',new Date());\nflow.set('currentWeight',currentWeight);\n\nmsg.payload = currentWeight;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 600,
        "y": 240,
        "wires": [
            [
                "a408db98.b9021",
                "ef5ea253.386138"
            ]
        ]
    },
    {
        "id": "a441f1b4.c1c158",
        "type": "comment",
        "z": "114661a7.e8a2be",
        "name": "Device level",
        "info": "",
        "x": 103.91738891601562,
        "y": 158.04128742218018,
        "wires": []
    },
    {
        "id": "d2607a9c.ed4d9",
        "type": "inject",
        "z": "114661a7.e8a2be",
        "name": "init",
        "repeat": "",
        "crontab": "",
        "once": true,
        "topic": "",
        "payload": "init",
        "payloadType": "str",
        "x": 103.91738891601562,
        "y": 98.04128742218018,
        "wires": [
            [
                "12cb783c.a85348"
            ]
        ]
    },
    {
        "id": "126921e2.27771e",
        "type": "comment",
        "z": "114661a7.e8a2be",
        "name": "INITIALIZING",
        "info": "",
        "x": 103.91738891601562,
        "y": 38.041287422180176,
        "wires": []
    },
    {
        "id": "12cb783c.a85348",
        "type": "function",
        "z": "114661a7.e8a2be",
        "name": "Scale PARSER",
        "func": "flow.set('inputString',\"SIR\" + String.fromCharCode(13) + String.fromCharCode(10));\nflow.set('parser',function(v){\n       v = v.toString();\n       v = v.replace(\"S\",\"\");\n       v = v.replace(\"S\",\"\");\n       v = v.replace(\"kg\",\"\");\n       return Number(v);\n    }\n  );\nglobal.set('scale_id','');\nglobal.set('ip','10.10.190.30');\nglobal.set('video_camera_url','');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 293.9173889160156,
        "y": 98.04128742218018,
        "wires": [
            []
        ]
    },
    {
        "id": "ef5ea253.386138",
        "type": "link out",
        "z": "114661a7.e8a2be",
        "name": "",
        "links": [
            "2712a79.4a933d8"
        ],
        "x": 781.0826110839844,
        "y": 241.95871257781982,
        "wires": []
    },
    {
        "id": "1fb3bde9.f10cda",
        "type": "debug",
        "z": "114661a7.e8a2be",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 330,
        "y": 200,
        "wires": []
    },
    {
        "id": "a408db98.b9021",
        "type": "debug",
        "z": "114661a7.e8a2be",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 845.0826110839844,
        "y": 202.95871257781982,
        "wires": []
    },
    {
        "id": "1c209eca.167721",
        "type": "function",
        "z": "114661a7.e8a2be",
        "name": "time_rasp",
        "func": "var time = new Date();\nflow.set(\"time_rasp\", time);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 280,
        "y": 440,
        "wires": [
            [
                "3d8ab9e2.743986"
            ]
        ]
    },
    {
        "id": "f34e6176.827b48",
        "type": "inject",
        "z": "114661a7.e8a2be",
        "name": "",
        "repeat": "1",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 440,
        "wires": [
            [
                "1c209eca.167721"
            ]
        ]
    },
    {
        "id": "3d8ab9e2.743986",
        "type": "function",
        "z": "114661a7.e8a2be",
        "name": "sub time",
        "func": "var weigth_time = flow.get(\"weigth_time\");\nvar time_rasp = flow.get(\"time_rasp\");\n\nvar sub = time_rasp - weigth_time;\n//msg.payload = {\n//    sub: time_rasp - weigth_time,\n//    weigth_time: weigth_time,\n//    time_rasp: time_rasp\n//}\n\n    if(sub > 5000){\n    msg.payload = 0;\n    return msg;\n    }\n",
        "outputs": 1,
        "noerr": 0,
        "x": 420,
        "y": 440,
        "wires": [
            [
                "105cf38c.510ac4",
                "ef5ea253.386138",
                "3b1c8d8b.3cd772"
            ]
        ]
    },
    {
        "id": "105cf38c.510ac4",
        "type": "debug",
        "z": "114661a7.e8a2be",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 590,
        "y": 440,
        "wires": []
    },
    {
        "id": "c45e6758.a81e68",
        "type": "function",
        "z": "114661a7.e8a2be",
        "name": "weigth_time",
        "func": "flow.set('weigth_time',new Date());\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 290,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "4f032dc.56dc6d4",
        "type": "tcp request",
        "z": "114661a7.e8a2be",
        "name": "",
        "server": "10.10.190.205",
        "port": "1702",
        "out": "char",
        "splitc": "\\n",
        "x": 370,
        "y": 240,
        "wires": [
            [
                "516fd8fb.90d3e8",
                "c45e6758.a81e68",
                "996ee17c.aa5ca8",
                "f96b1f4f.f81a4"
            ]
        ]
    },
    {
        "id": "f96b1f4f.f81a4",
        "type": "function",
        "z": "114661a7.e8a2be",
        "name": "",
        "func": "var weight = msg.payload.toString();\n\nmsg.payload = {\n    weight, date:new Date(), connect: \"yes\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 540,
        "wires": [
            [
                "49779d4b.8d4be4",
                "4a017e07.98ac38"
            ]
        ]
    },
    {
        "id": "49779d4b.8d4be4",
        "type": "file",
        "z": "114661a7.e8a2be",
        "name": "",
        "filename": "/distr/data/log_new.txt",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "x": 700,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "3e184b93.4dd64c",
        "type": "debug",
        "z": "114661a7.e8a2be",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 710,
        "y": 120,
        "wires": []
    },
    {
        "id": "996ee17c.aa5ca8",
        "type": "function",
        "z": "114661a7.e8a2be",
        "name": "GET WEIGHT",
        "func": "msg.payload = msg.payload.toString();\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 540,
        "y": 120,
        "wires": [
            [
                "3e184b93.4dd64c"
            ]
        ]
    },
    {
        "id": "8914a380.78cd08",
        "type": "inject",
        "z": "114661a7.e8a2be",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "4a017e07.98ac38",
        "type": "debug",
        "z": "114661a7.e8a2be",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 670,
        "y": 500,
        "wires": []
    },
    {
        "id": "204e0f28.40eb68",
        "type": "http response",
        "z": "114661a7.e8a2be",
        "name": "",
        "x": 550,
        "y": 740,
        "wires": []
    },
    {
        "id": "b2d38deb.7b3e1",
        "type": "http in",
        "z": "114661a7.e8a2be",
        "name": "",
        "url": "/api/platform/get/log/weight",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 210,
        "y": 680,
        "wires": [
            [
                "3177c1da.d74e26"
            ]
        ]
    },
    {
        "id": "3177c1da.d74e26",
        "type": "file in",
        "z": "114661a7.e8a2be",
        "name": "",
        "filename": "/distr/data/log_new.txt",
        "format": "utf8",
        "x": 450,
        "y": 680,
        "wires": [
            [
                "204e0f28.40eb68"
            ]
        ]
    },
    {
        "id": "3b1c8d8b.3cd772",
        "type": "function",
        "z": "114661a7.e8a2be",
        "name": "",
        "func": "var weight = 0;\n\nmsg.payload = {\n    weight, date:new Date(), connect: \"not\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 600,
        "wires": [
            [
                "49779d4b.8d4be4"
            ]
        ]
    },
    {
        "id": "9c5c64f3.b62cd",
        "type": "file",
        "z": "e57604f8.25388",
        "name": "deivce_config",
        "filename": "deivce_config2.json",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "x": 460,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "b4cdaabc.fdf458",
        "type": "exec",
        "z": "e57604f8.25388",
        "command": "cat /proc/cpuinfo",
        "addpay": true,
        "append": "| grep Serial",
        "useSpawn": "",
        "timer": "5",
        "name": "",
        "x": 400,
        "y": 40,
        "wires": [
            [
                "eb54557a.0892c",
                "6edeb119.515d38"
            ],
            [],
            []
        ]
    },
    {
        "id": "96169397.cd8508",
        "type": "function",
        "z": "e57604f8.25388",
        "name": "main config",
        "func": "flow.set('prevWeight',null);\nflow.set('transaction',null);\nflow.set('transactionData',[]);\nflow.set('transactionMaxWeight',null);\nflow.set('transactionHasMinWeight',null);\nflow.set('transactionHasMaxWeight',null);\nflow.set('transactionHasMaxDuration',null);\nflow.set('lasttimedata', new Date());\nflow.set('checkHealth',null);\nflow.set('transactionWaybill',null);\nflow.set('transactionAccWeight', null);\nflow.set('transactionHasOverLoad', null);\nflow.set('transactionOperationName', null);\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 490,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "42336b26.5be054",
        "type": "inject",
        "z": "e57604f8.25388",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": true,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 110,
        "y": 220,
        "wires": [
            [
                "8dddf873.17a88",
                "e643ab8.5f00dd8"
            ]
        ]
    },
    {
        "id": "6280b805.cc0ae",
        "type": "http in",
        "z": "e57604f8.25388",
        "name": "",
        "url": "/firmware",
        "method": "post",
        "swaggerDoc": "",
        "x": 140,
        "y": 100,
        "wires": [
            [
                "9c5c64f3.b62cd"
            ]
        ]
    },
    {
        "id": "8dddf873.17a88",
        "type": "file in",
        "z": "e57604f8.25388",
        "name": "deivce_config",
        "filename": "deivce_config2.json",
        "format": "utf8",
        "x": 300,
        "y": 220,
        "wires": [
            [
                "4e529e63.43eea8"
            ]
        ]
    },
    {
        "id": "31582769.a0cf2",
        "type": "http in",
        "z": "e57604f8.25388",
        "name": "",
        "url": "/serial",
        "method": "get",
        "swaggerDoc": "",
        "x": 140,
        "y": 40,
        "wires": [
            [
                "b4cdaabc.fdf458"
            ]
        ]
    },
    {
        "id": "eb54557a.0892c",
        "type": "http response",
        "z": "e57604f8.25388",
        "name": "",
        "x": 616,
        "y": 23,
        "wires": []
    },
    {
        "id": "6edeb119.515d38",
        "type": "function",
        "z": "e57604f8.25388",
        "name": "",
        "func": "msg.payload = msg.payload.split(':')[1].replace('\\n','').replace(' ','');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 622,
        "y": 59,
        "wires": [
            [
                "465a9062.a194a8"
            ]
        ]
    },
    {
        "id": "465a9062.a194a8",
        "type": "debug",
        "z": "e57604f8.25388",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 759,
        "y": 54,
        "wires": []
    },
    {
        "id": "60b28e46.974bc8",
        "type": "inject",
        "z": "e57604f8.25388",
        "name": "DEMO",
        "repeat": "10800",
        "crontab": "",
        "once": true,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 120,
        "y": 180,
        "wires": [
            [
                "eb260800.a586f"
            ]
        ]
    },
    {
        "id": "eb260800.a586f",
        "type": "function",
        "z": "e57604f8.25388",
        "name": "DEMO Data",
        "func": "var device_config = {\n    'event_move_in_id':'80096D9ABE7F68F3E0533300000A6C0D',\n    'event_move_in_minus_id':'8DB9B239DF5252F0E055000000000001',\n    'event_move_out_id':'80096D9ABE8068F3E0533300000A6C0D',\n    'event_max_weight_id':'85A255F950F9BEF4E0533300000AC45D',\n    'event_on_id': '85A2CC45702A2DD1E0533300000A0C94',\n    'event_off_id':'85A2CC4570292DD1E0533300000A0C94',\n    'event_max_duration':'8642EE858DE89BAAE0533300000AFCC7',\n    'event_fake_traffic':'80096EF60C186574E0533300000ADBA5',\n    'event_get_weight_acc':'800970AC1FDC683CE0533300000AF1B0',\n    'event_min_weight':'875C3EB5C9DD092DE055000000000001',\n    'event_driver_in':'8E68D8D8B2977181E055000000000001',\n    'event_over_load':'B3EB5F800EFD2620E0530101007F8A05',\n    'snapshot_events':['80096D9ABE7F68F3E0533300000A6C0D','85A255F950F9BEF4E0533300000AC45D','8642EE858DE89BAAE0533300000AFCC7','800970AC1FDC683CE0533300000AF1B0', \"8E68D8D8B2977181E055000000000001\",\"B3EB5F800EFD2620E0530101007F8A05\"],\n    'main_host':'',\n    'event_url':'/iot_cli/events/log',\n    'state_url':'/iot_cli/device',\n    'snapshot_url':'/iot_cli/events/snapshot',\n    'maxWeight':60000,\n    'maxDuration':600000,\n    'minWeight':-40,\n    'checkHealthTimeout':3000,\n    'minTriggerWeight':40,\n    'driverWeight':80,\n    'overLoadWeight': 200,\n    'stableDiff': 60\n};\nmsg.payload = device_config;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 290,
        "y": 180,
        "wires": [
            [
                "9c5c64f3.b62cd"
            ]
        ]
    },
    {
        "id": "4e529e63.43eea8",
        "type": "function",
        "z": "e57604f8.25388",
        "name": "device config",
        "func": "var device_config = JSON.parse(msg.payload);\n\nflow.set('scale_id',device_config.scale_id);\nflow.set('event_move_in_id',device_config.event_move_in_id);\nflow.set('event_move_in_minus_id',device_config.event_move_in_minus_id);\nflow.set('event_move_out_id',device_config.event_move_out_id);\nflow.set('event_max_weight_id',device_config.event_max_weight_id);\nflow.set('event_off_id',device_config.event_off_id);\nflow.set('event_on_id', device_config.event_on_id);\nflow.set('event_max_duration',device_config.event_max_duration);\nflow.set('event_fake_traffic',device_config.event_fake_traffic);\nflow.set('event_driver_in', device_config.event_driver_in);\nflow.set('event_over_load',device_config.event_over_load);\nflow.set('main_host',device_config.main_host);\nflow.set('event_url',device_config.event_url);\nflow.set('state_url',device_config.state_url);\nflow.set('maxWeight',device_config.maxWeight);\nflow.set('minWeight',device_config.minWeight);\nflow.set('maxDuration',device_config.maxDuration);\nflow.set('checkHealthTimeout',device_config.checkHealthTimeout);\nflow.set('event_get_weight_acc',device_config.event_get_weight_acc);\nflow.set('event_min_weight',device_config.event_min_weight);\nflow.set('minTriggerWeight',device_config.minTriggerWeight);\nflow.set('snapshot_url',device_config.snapshot_url);\nflow.set('snapshot_events',device_config.snapshot_events);\nflow.set('driverWeight',device_config.driverWeight);\nflow.set('overLoadWeight', device_config.overLoadWeight);\nflow.set('stableDiff', device_config.stableDiff);\n\nmsg.payload = {\n\tscale_id: flow.get('scale_id'),\n\tevent_move_in_id: flow.get('event_move_in_id'),\n\tevent_move_in_minus_id: flow.get('event_move_in_minus_id'),\n\tevent_move_out_id: flow.get('event_move_out_id'),\n\tevent_max_weight_id: flow.get('event_max_weight_id'),\n\tevent_off_id: flow.get('event_off_id'),\n\tevent_on_id: flow.get('event_on_id'),\n\tevent_max_duration: flow.get('event_max_duration'),\n\tevent_fake_traffic: flow.get('event_fake_traffic'),\n\tevent_driver_in: flow.get('event_driver_in'),\n\tevent_over_load: flow.get('event_over_load'),\n\tmain_host: flow.get('main_host'),\n\tevent_url: flow.get('event_url'),\n\tstate_url: flow.get('state_url'),\n\tmaxWeight: flow.get('maxWeight'),\n\tminWeight: flow.get('minWeight'),\n\tmaxDuration: flow.get('maxDuration'),\n\tcheckHealthTimeout: flow.get('checkHealthTimeout'),\n\tevent_get_weight_acc: flow.get('event_get_weight_acc'),\n\tevent_min_weight: flow.get('event_min_weight'),\n\tminTriggerWeight: flow.get('minTriggerWeight'),\n\tsnapshot_url: flow.get('snapshot_url'),\n\tsnapshot_events: flow.get('snapshot_events'),\n\tdriverWeight: flow.get('driverWeight'),\n\toverLoadWeight: flow.get('overLoadWeight'),\n\tstableDiff: flow.get('stableDiff')\n};\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 490,
        "y": 220,
        "wires": [
            [
                "635c97e3.5bcdb8"
            ]
        ]
    },
    {
        "id": "635c97e3.5bcdb8",
        "type": "json",
        "z": "e57604f8.25388",
        "name": "",
        "x": 630,
        "y": 220,
        "wires": [
            [
                "448cef4c.e0c768"
            ]
        ]
    },
    {
        "id": "448cef4c.e0c768",
        "type": "debug",
        "z": "e57604f8.25388",
        "name": "IN device config",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 780,
        "y": 220,
        "wires": []
    },
    {
        "id": "e643ab8.5f00dd8",
        "type": "trigger",
        "z": "e57604f8.25388",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "units": "ms",
        "reset": "",
        "outputs": 1,
        "x": 283.8571428571429,
        "y": 264.4285714285714,
        "wires": [
            [
                "96169397.cd8508"
            ]
        ]
    },
    {
        "id": "261c9516.3e4bf2",
        "type": "comment",
        "z": "e57604f8.25388",
        "name": "Init",
        "info": "",
        "x": 90,
        "y": 140,
        "wires": []
    },
    {
        "id": "6f6fa187.7090d",
        "type": "function",
        "z": "e57604f8.25388",
        "name": "transactionHasMaxWeight",
        "func": "msg.event_id = flow.get('event_max_weight_id');\nmsg.description = 'Перевищена максимально-допустима вага, кг: ' + msg.metadata.weight;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 690,
        "y": 640,
        "wires": [
            [
                "ad436cd8.26f988"
            ]
        ]
    },
    {
        "id": "e22cdbd7.15a7a",
        "type": "switch",
        "z": "e57604f8.25388",
        "name": "switch max weight",
        "property": "transactionHasMaxWeight",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 450,
        "y": 560,
        "wires": [
            [
                "6f6fa187.7090d"
            ]
        ]
    },
    {
        "id": "ad436cd8.26f988",
        "type": "function",
        "z": "e57604f8.25388",
        "name": "events payload",
        "func": "var event_id = msg.event_id;\nvar scale_id = global.get('scale_id');\nvar snapshot_events = flow.get('snapshot_events');\nvar snapshot = false;\n\nif (snapshot_events.indexOf(event_id)>=0){\n    snapshot = true;\n}\n\nmsg.payload = {\n    'event':{\n        'id':msg.event_id\n    },\n    'devices':[{'id':scale_id}],\n    'data':msg.metadata,\n    'description':msg.description\n}\n\nmsg.headers = {\n    \"content-type\":\"application/json\"\n}\n\nmsg.url = flow.get('main_host')+flow.get('event_url');\nmsg.main_host = flow.get('main_host');\nmsg.event_url = flow.get('event_url');\nmsg.snapshot = snapshot;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1020,
        "y": 600,
        "wires": [
            [
                "4809f48b.d1dd2c"
            ]
        ]
    },
    {
        "id": "a758a729.1166f8",
        "type": "function",
        "z": "e57604f8.25388",
        "name": "main module",
        "func": "var prevWeight = flow.get('prevWeight');\nvar transaction = flow.get('transaction');\nvar transactionData = flow.get('transactionData');\nvar transactionMaxWeight = flow.get('transactionMaxWeight');\nvar transactionHasMaxWeight = flow.get('transactionHasMaxWeight');\nvar transactionHasMinWeight = flow.get('transactionHasMinWeight');\nvar transactionHasMaxDuration = flow.get('transactionHasMaxDuration');\nvar transactionOperationName = flow.get('transactionOperationName');\nvar stableDiff = flow.get('stableDiff');//дельта стабільності\nvar waybill = flow.get('transactionWaybill');\nvar weight = msg.payload;\nvar stableSize = 5;\nvar duration = 0;\nvar operation_name_income = \"Приход (авто)\";\nvar maxWeight = flow.get('maxWeight');\nvar maxDuration = flow.get('maxDuration');\nvar prevTransaction = transaction;\nvar minWeight = flow.get('minWeight');\nvar minTriggerWeight = flow.get('minTriggerWeight');\nvar is_minus = false;\nvar transactionAccWeight = flow.get('transactionAccWeight');//облікова вага\nvar overLoadWeight = flow.get('overLoadWeight');\n\n//transaction\nif (prevWeight === null){\n    prevWeight = msg.payload;    \n}else{\n    if((prevWeight <= 0) && (weight > 0) && (weight > minTriggerWeight)){\n        //start of transaction\n        transaction = Date.now();\n        msg.on = true;\n        flow.set('transaction',transaction);\n    }else if((prevWeight > 0) && (weight <=0) && (transaction)){\n        //transaction = 0;\n        msg.on = false;\n        transactionData = [];\n        flow.set('transaction',0);\n        flow.set('transactionMaxWeight',null);\n        flow.set('transactionHasMaxWeight',null);\n        flow.set('transactionHasMinWeight',null);\n        flow.set('transactionHasMaxDuration',null);\n        flow.set('transactionHasOverLoad',null);\n        flow.set('transactionOperationName',null);\n        flow.set('transactionWaybill',null);\n        flow.set('transactionMetadata',null);\n        flow.set('transactionAccWeight', null);//облікова вага\n    }else if((transaction === null) && (weight>0) && (weight > minTriggerWeight)){\n        transaction = Date.now();\n        flow.set('transaction',transaction);\n    }\n    if((prevWeight < 0) && ((weight-prevWeight) > minTriggerWeight)){\n        //start of transaction\n        is_minus = true;\n        msg.prevWeight = prevWeight;\n    }\n}\n\nmsg.stable = true;\n\nif (transaction > 0){\n    transactionData.push(weight);    \n\n    //stable\n    if(transactionData.length > stableSize+1){\n        var stabletmp = true;\n        for (var i = transactionData.length-1; i > transactionData.length-1-stableSize; i--){\n            if ((transactionData[i] - transactionData[i-1]) > stableDiff || (transactionData[i] - transactionData[i-1]) < -stableDiff){\n                stabletmp = false;\n                msg.stable = stabletmp;\n                break;\n            }\n            msg.stable = stabletmp;\n        }\n    }else{\n        msg.stable = false;\n    }\n\n    //duration & transactionMaxWeight\n    duration = (Number(Date.now()) - Number(transaction));\n    if( (weight>transactionMaxWeight) || (transactionMaxWeight === null)){\n        transactionMaxWeight = weight;\n        flow.set(\"transactionMaxWeight\",transactionMaxWeight);\n    }\n    \n    if(!transactionHasMaxWeight && weight > maxWeight){\n        msg.transactionHasMaxWeight = true;\n        flow.set('transactionHasMaxWeight',true);\n    }\n    \n    if(!transactionHasMinWeight && weight < minWeight){\n        msg.transactionHasMinWeight = true;\n        flow.set('transactionHasMinWeight',true);\n    }\n    \n    //max duartion\n    if(!transactionHasMaxDuration && duration > maxDuration){\n        msg.transactionHasMaxDuration = true;\n        flow.set('transactionHasMaxDuration',true);\n    }\n}\n\n//result\nmsg.metadata = {\n    'weight':weight,\n    'prevWeight':prevWeight,\n    'prevTransaction':prevTransaction,\n    'transaction':transaction,\n    'on':msg.on,\n    'transactionDataCount':transactionData.length,\n    'stable':msg.stable,\n    'duration':Math.round(duration/1000),\n    'transactionMaxWeight':transactionMaxWeight,\n    'transactionAccWeight':transactionAccWeight,\n    'waybill':waybill,\n    'perimetr':true,\n    'weight1':msg.weight1,\n    'weight2':msg.weight2,\n    'weight_center':msg.weight_center,\n    'driverInCar':false,\n    'transactionOperationName':transactionOperationName\n}\nflow.set('transactionData',transactionData);\nflow.set('prevWeight',weight);\nflow.set('transactionMetadata',msg.metadata);\nflow.set('lasttimedata', new Date());\nmsg.is_minus = is_minus;\n\nif(transactionAccWeight && transactionOperationName!==operation_name_income){\n    \n   flow.set('transactionHasOverLoad',(weight-transactionAccWeight)>overLoadWeight);\n   \n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 190,
        "y": 540,
        "wires": [
            [
                "e4d9779.ed96208",
                "e22cdbd7.15a7a",
                "ec5cbad4.9c7918",
                "82ff8be5.ccde5",
                "3bf2f0cf.55d8"
            ]
        ]
    },
    {
        "id": "5e9217bc.5f3558",
        "type": "function",
        "z": "e57604f8.25388",
        "name": "get weight from accounting system",
        "func": "var transactionMetadata = flow.get('transactionMetadata');\nvar transactionMaxWeight = flow.get('transactionMaxWeight');\nvar driverWeight = flow.get('driverWeight');\nvar buisness_data = msg.req.query;\n\nmsg.metadata = Object.assign(transactionMetadata,buisness_data);\n\n//check driver in a car\nvar driver_in = false;\nmsg.driverWeight = driverWeight;\nif((transactionMaxWeight - msg.metadata.weight) < driverWeight){\n    driver_in = true;\n}\n\nmsg.event_id = flow.get('event_get_weight_acc');\ntransactionWaybill = flow.get('transactionWaybill');\nif (!transactionWaybill){\n    flow.set('transactionWaybill',msg.req.query.reader);\n}\nmsg.description = ' '+buisness_data.operation_name+'. '+buisness_data.operation_type+'. Зважили в 1С. Поточна вага: ' + msg.metadata.weight+\" Номер авто: \"+buisness_data.truck1+\" \"+buisness_data.truck2+\" \"+buisness_data.item_name + \", ТТН: \" + buisness_data.waybill;\nmsg.transactionMetadata = transactionMetadata;\nmsg.driver_in = driver_in;\n\nflow.set('transactionAccWeight',  msg.metadata.weight);//облікова вага\nflow.set('transactionOperationName',  msg.metadata.operation_name);//вид операції\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 537.1428680419922,
        "y": 997.1428661346436,
        "wires": [
            [
                "c82bf798.4e2628",
                "ad436cd8.26f988"
            ]
        ]
    },
    {
        "id": "4809f48b.d1dd2c",
        "type": "debug",
        "z": "e57604f8.25388",
        "name": "IN event",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 1180,
        "y": 600,
        "wires": []
    },
    {
        "id": "4b473bec.51015c",
        "type": "function",
        "z": "e57604f8.25388",
        "name": "move in",
        "func": "msg.event_id = flow.get('event_move_in_id');\nmsg.description = 'Заїзд на ваги. Поточна вага: ' + msg.metadata.weight;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 640,
        "y": 560,
        "wires": [
            [
                "ad436cd8.26f988"
            ]
        ]
    },
    {
        "id": "499b88e4.c70648",
        "type": "function",
        "z": "e57604f8.25388",
        "name": "off",
        "func": "msg.event_id = flow.get('event_off_id');\nmsg.description = 'Прилад відключено';\nmsg.metadata = {\n    'state':msg.checkHealth\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 630,
        "y": 860,
        "wires": [
            [
                "55eb6bd9.ad7254"
            ]
        ]
    },
    {
        "id": "f8c9058d.e59608",
        "type": "function",
        "z": "e57604f8.25388",
        "name": "on",
        "func": "msg.event_id = flow.get('event_on_id');\nmsg.description = 'Прилад підключено';\nmsg.metadata = {\n    'state':msg.checkHealth\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 630,
        "y": 820,
        "wires": [
            [
                "4f998548.82ed3c"
            ]
        ]
    },
    {
        "id": "2a9b6a79.768ed6",
        "type": "function",
        "z": "e57604f8.25388",
        "name": "move out",
        "func": "msg.event_id = flow.get('event_move_out_id');\nmsg.description = 'Зїзд з ваг. Максимальна вага: ' + msg.metadata.transactionMaxWeight;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 640,
        "y": 600,
        "wires": [
            [
                "ad436cd8.26f988"
            ]
        ]
    },
    {
        "id": "f97e376c.b84788",
        "type": "function",
        "z": "e57604f8.25388",
        "name": "transaction has max duration",
        "func": "msg.event_id = flow.get('event_max_duration');\nmsg.description = 'Перевищено максимальний час находження на вагах, сек: ' + msg.metadata.duration;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 700,
        "y": 680,
        "wires": [
            [
                "ad436cd8.26f988"
            ]
        ]
    },
    {
        "id": "8313fa17.c76c5",
        "type": "function",
        "z": "e57604f8.25388",
        "name": "empty waybill",
        "func": "msg.event_id = flow.get('event_fake_traffic');\nmsg.description = 'Холостий проїзд по вагам. Тривалість проїзду ' + Math.round(msg.metadata.duration/60)+ 'хв.'+ \" Максимальна вага: \" + msg.metadata.transactionMaxWeight + \" кг.\";\n//metadata.transactionMaxWeight\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 800,
        "y": 520,
        "wires": [
            [
                "ad436cd8.26f988"
            ]
        ]
    },
    {
        "id": "be653558.4fb598",
        "type": "function",
        "z": "e57604f8.25388",
        "name": "transactionHasMinWeight",
        "func": "msg.event_id = flow.get('event_min_weight');\nmsg.description = 'Перевищена мінімально-допустима вага, кг: ' + msg.metadata.weight;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 690,
        "y": 720,
        "wires": [
            [
                "ad436cd8.26f988"
            ]
        ]
    },
    {
        "id": "2d9751fe.6dcde6",
        "type": "function",
        "z": "e57604f8.25388",
        "name": "move in minus",
        "func": "msg.event_id = flow.get('event_move_in_minus_id');\nmsg.description = 'Заїзд із мінусом. ' + msg.prevWeight +' кг.';\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 660,
        "y": 480,
        "wires": [
            [
                "ad436cd8.26f988"
            ]
        ]
    },
    {
        "id": "2712a79.4a933d8",
        "type": "link in",
        "z": "e57604f8.25388",
        "name": "s4",
        "links": [
            "ef5ea253.386138"
        ],
        "x": 35,
        "y": 540,
        "wires": [
            [
                "88b5a2dd.8606c8",
                "7dc53b32.fc763c",
                "9eceb601.36d51",
                "a758a729.1166f8"
            ]
        ]
    },
    {
        "id": "e4d9779.ed96208",
        "type": "switch",
        "z": "e57604f8.25388",
        "name": "switch move",
        "property": "on",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 432,
        "y": 522.9999885559082,
        "wires": [
            [
                "4b473bec.51015c"
            ],
            [
                "2a9b6a79.768ed6",
                "81b548ed.c3225",
                "9f1d0131.bfff08"
            ]
        ]
    },
    {
        "id": "ec5cbad4.9c7918",
        "type": "switch",
        "z": "e57604f8.25388",
        "name": "max duration",
        "property": "transactionHasMaxDuration",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 430,
        "y": 600,
        "wires": [
            [
                "f97e376c.b84788"
            ]
        ]
    },
    {
        "id": "82ff8be5.ccde5",
        "type": "switch",
        "z": "e57604f8.25388",
        "name": "switch min weight",
        "property": "transactionHasMinWeight",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 450,
        "y": 640,
        "wires": [
            [
                "be653558.4fb598"
            ]
        ]
    },
    {
        "id": "3bf2f0cf.55d8",
        "type": "switch",
        "z": "e57604f8.25388",
        "name": "switch minus in",
        "property": "is_minus",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 440,
        "y": 480,
        "wires": [
            [
                "2d9751fe.6dcde6"
            ]
        ]
    },
    {
        "id": "c82bf798.4e2628",
        "type": "switch",
        "z": "e57604f8.25388",
        "name": "",
        "property": "driver_in",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 830,
        "y": 1000,
        "wires": [
            [
                "72722b94.9e0964",
                "884b0562.91707"
            ]
        ]
    },
    {
        "id": "27009e8c.4e6132",
        "type": "http in",
        "z": "e57604f8.25388",
        "name": "",
        "url": "/api/platform/getWeight2",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 223.57144165039062,
        "y": 998.714282989502,
        "wires": [
            [
                "5fd225e9.a42574",
                "5e9217bc.5f3558"
            ]
        ]
    },
    {
        "id": "72722b94.9e0964",
        "type": "function",
        "z": "e57604f8.25388",
        "name": "driver_in event",
        "func": "msg.event_id = flow.get('event_driver_in');\nmsg.description = 'При зважуванні водій в кабіні. Вага: ' + msg.metadata.weight+\"кг. Номер авто: \"+msg.metadata.truck1+\" \"+msg.metadata.truck2+\" \"+msg.metadata.item_name;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1052.0159301757812,
        "y": 762.2064208984375,
        "wires": [
            [
                "ad436cd8.26f988"
            ]
        ]
    },
    {
        "id": "4ece354c.f3f744",
        "type": "switch",
        "z": "e57604f8.25388",
        "name": "",
        "property": "checkHealth",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 490,
        "y": 840,
        "wires": [
            [
                "f8c9058d.e59608"
            ],
            [
                "499b88e4.c70648"
            ]
        ]
    },
    {
        "id": "81b548ed.c3225",
        "type": "switch",
        "z": "e57604f8.25388",
        "name": "waybill",
        "property": "metadata.waybill",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 640,
        "y": 520,
        "wires": [
            [
                "8313fa17.c76c5"
            ]
        ]
    },
    {
        "id": "88b5a2dd.8606c8",
        "type": "socket-io-out",
        "z": "e57604f8.25388",
        "name": "socket 4001",
        "event": "4358e8ed.41d73",
        "server": "64f39e3a.51bd8",
        "x": 190,
        "y": 600,
        "wires": []
    },
    {
        "id": "7dc53b32.fc763c",
        "type": "ui_text",
        "z": "e57604f8.25388",
        "group": "9bf2a625.21192",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Поточна вага:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 199,
        "y": 634.0000114440918,
        "wires": []
    },
    {
        "id": "884b0562.91707",
        "type": "debug",
        "z": "e57604f8.25388",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 990,
        "y": 1000,
        "wires": []
    },
    {
        "id": "5fd225e9.a42574",
        "type": "function",
        "z": "e57604f8.25388",
        "name": "response",
        "func": "msg.payload = flow.get('transactionMetadata');\nmsg.payload.driverInCar = false;\ntransactionWaybill = flow.get('transactionWaybill');\nmsg.payload.transactionWaybill = transactionWaybill;\nif(transactionWaybill && transactionWaybill !== msg.req.query.reader){\n    msg.payload.status = false;    \n}else {\n    msg.payload.status = true;    \n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 460,
        "y": 1060,
        "wires": [
            [
                "ebe72b70.1f5098"
            ]
        ]
    },
    {
        "id": "341e2e99.070c52",
        "type": "function",
        "z": "e57604f8.25388",
        "name": "check scale health",
        "func": "var lastcheckHealth = flow.get('checkHealth');\nvar checkHealth = null;\nvar lasttimedata = flow.get('lasttimedata');\n\nvar currenttimedata = new Date();\n\nif ((currenttimedata - lasttimedata) > 3000){\n    checkHealth = false;\n} else {\n    checkHealth = true;\n}\n\nflow.set(\"checkHealth\",checkHealth);\n\nif (lastcheckHealth != checkHealth){\n    msg.checkHealth = checkHealth;\n}else{\n    msg.checkHealth = null;\n}\nmsg.payload = checkHealth;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 310,
        "y": 840,
        "wires": [
            [
                "4ece354c.f3f744"
            ]
        ]
    },
    {
        "id": "ebe72b70.1f5098",
        "type": "http response",
        "z": "e57604f8.25388",
        "name": "",
        "x": 670,
        "y": 1060,
        "wires": []
    },
    {
        "id": "d0887a4f.6f496",
        "type": "inject",
        "z": "e57604f8.25388",
        "name": "",
        "repeat": "6",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 840,
        "wires": [
            [
                "341e2e99.070c52"
            ]
        ]
    },
    {
        "id": "b63634c4.995418",
        "type": "http in",
        "z": "e57604f8.25388",
        "name": "",
        "url": "/api/platform/getSimpleWeight2",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 240,
        "y": 1140,
        "wires": [
            [
                "1efdf0e3.82f157"
            ]
        ]
    },
    {
        "id": "1efdf0e3.82f157",
        "type": "function",
        "z": "e57604f8.25388",
        "name": "response",
        "func": "msg.payload = {\n    weight: flow.get('transactionMetadata').weight\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1140,
        "wires": [
            [
                "cf0aa1f4.eba5b8"
            ]
        ]
    },
    {
        "id": "cf0aa1f4.eba5b8",
        "type": "http response",
        "z": "e57604f8.25388",
        "name": "",
        "x": 630,
        "y": 1140,
        "wires": []
    },
    {
        "id": "9eceb601.36d51",
        "type": "ui_chart",
        "z": "e57604f8.25388",
        "name": "",
        "group": "556dabca.b016cc",
        "order": 0,
        "width": "6",
        "height": "6",
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "ymin": "-20",
        "ymax": "70000",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "outputs": 2,
        "x": 169.3333740234375,
        "y": 670.3333740234375,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "811ceab3.ce37a8",
        "type": "comment",
        "z": "e57604f8.25388",
        "name": "Зважити у Апекс",
        "info": "",
        "x": 162.3333740234375,
        "y": 951.3333625793457,
        "wires": []
    },
    {
        "id": "86f69992.07511",
        "type": "function",
        "z": "e57604f8.25388",
        "name": "over_load",
        "func": "msg.event_id = flow.get('event_over_load');\nmsg.description = 'Можливий досип після зважування. Максимальная вага: ' + msg.metadata.transactionMaxWeight + \"кг. Облікова вага: \" + msg.metadata.transactionAccWeight + \"кг.\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 800,
        "y": 400,
        "wires": [
            [
                "ad436cd8.26f988"
            ]
        ]
    },
    {
        "id": "9f1d0131.bfff08",
        "type": "switch",
        "z": "e57604f8.25388",
        "name": "",
        "property": "transactionHasOverLoad",
        "propertyType": "flow",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 630,
        "y": 400,
        "wires": [
            [
                "86f69992.07511"
            ]
        ]
    },
    {
        "id": "4f998548.82ed3c",
        "type": "delay",
        "z": "e57604f8.25388",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "3",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "outputs": 1,
        "x": 780,
        "y": 820,
        "wires": [
            [
                "ad436cd8.26f988"
            ]
        ]
    },
    {
        "id": "55eb6bd9.ad7254",
        "type": "delay",
        "z": "e57604f8.25388",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "3",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "outputs": 1,
        "x": 780,
        "y": 860,
        "wires": [
            [
                "ad436cd8.26f988"
            ]
        ]
    },
    {
        "id": "e3e4522e.1c1bb",
        "type": "inject",
        "z": "e57604f8.25388",
        "name": "Tick every 5 secs",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "test",
        "payload": "12345",
        "payloadType": "num",
        "x": 210,
        "y": 1280,
        "wires": [
            [
                "45dbf990.ba2408"
            ]
        ]
    },
    {
        "id": "50da04b3.af25fc",
        "type": "websocket out",
        "z": "e57604f8.25388",
        "name": "",
        "server": "985ecbc7.67a138",
        "client": "",
        "x": 660,
        "y": 1280,
        "wires": []
    },
    {
        "id": "42a28745.bd5d78",
        "type": "http response",
        "z": "e57604f8.25388",
        "name": "",
        "x": 631,
        "y": 1220,
        "wires": []
    },
    {
        "id": "1857548e.e7a8ab",
        "type": "template",
        "z": "e57604f8.25388",
        "name": "Simple Web Page",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!DOCTYPE HTML>\n<html>\n    <head>\n    <title>Simple Live Display</title>\n    <script type=\"text/javascript\">\n        var ws;\n        var wsUri = \"ws:\";\n        var loc = window.location;\n        console.log(loc);\n        if (loc.protocol === \"https:\") { wsUri = \"wss:\"; }\n        // This needs to point to the web socket in the Node-RED flow\n        // ... in this case it's ws/simple\n        wsUri += \"//\" + loc.host + loc.pathname.replace(\"api/platform/socket2\",\"ws/simple\");\n\n        function wsConnect() {\n            console.log(\"connect\",wsUri);\n            ws = new WebSocket(wsUri);\n            //var line = \"\";    // either uncomment this for a building list of messages\n            ws.onmessage = function(msg) {\n                var line = \"\";  // or uncomment this to overwrite the existing message\n                // parse the incoming message as a JSON object\n                var data = msg.data;\n                //console.log(data);\n                // build the output from the topic and payload parts of the object\n                line += \"<h1>\"+data+\"</h1>\";\n                // replace the messages div with the new \"line\"\n                document.getElementById('messages').innerHTML = line;\n                //ws.send(JSON.stringify({data:data}));\n            }\n            ws.onopen = function() {\n                // update the status div with the connection status\n                //document.getElementById('status').innerHTML = \"connected\";\n                //ws.send(\"Open for data\");\n                //console.log(\"connected\");\n            }\n            ws.onclose = function() {\n                // update the status div with the connection status\n                //document.getElementById('status').innerHTML = \"not connected\";\n                // in case of lost connection tries to reconnect every 3 secs\n                setTimeout(wsConnect,3000);\n            }\n        }\n        \n        function doit(m) {\n            if (ws) { ws.send(m); }\n        }\n    </script>\n    </head>\n    <body onload=\"wsConnect();\" onunload=\"ws.disconnect();\">\n        <div id=\"messages\"></div>\n    </body>\n</html>\n",
        "x": 459,
        "y": 1220,
        "wires": [
            [
                "42a28745.bd5d78"
            ]
        ]
    },
    {
        "id": "45dbf990.ba2408",
        "type": "function",
        "z": "e57604f8.25388",
        "name": "format time nicely",
        "func": "\n\nmsg.payload = flow.get('transactionMetadata').weight;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 448,
        "y": 1280,
        "wires": [
            [
                "50da04b3.af25fc"
            ]
        ]
    },
    {
        "id": "eccc8bc2.133378",
        "type": "websocket in",
        "z": "e57604f8.25388",
        "name": "",
        "server": "985ecbc7.67a138",
        "client": "",
        "x": 447,
        "y": 1332,
        "wires": [
            [
                "9adfff59.652"
            ]
        ]
    },
    {
        "id": "9adfff59.652",
        "type": "debug",
        "z": "e57604f8.25388",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 637,
        "y": 1332,
        "wires": []
    },
    {
        "id": "7c3d535f3124dfc7",
        "type": "http in",
        "z": "e57604f8.25388",
        "name": "",
        "url": "/api/platform/socket2",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 210,
        "y": 1220,
        "wires": [
            [
                "1857548e.e7a8ab"
            ]
        ]
    },
    {
        "id": "2ef86562.bbc57a",
        "type": "function",
        "z": "a54f8e5d.b4c1f8",
        "name": "Scale PARSER",
        "func": "flow.set('inputString',\"SI\" + String.fromCharCode(13) + String.fromCharCode(10));\nflow.set('parser',function(v){\n       v = v.toString();\n       v = v.replace(\"S\",\"\");\n       v = v.replace(\"S\",\"\");\n       v = v.replace(\"kg\",\"\");\n       v = v.substring(21, 32);\n       return Number(v);\n       //return v;\n    }\n  );\nglobal.set('scale_id','');\nglobal.set('ip','10.10.190.30');\nglobal.set('video_camera_url','');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 260,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "b6c7f266.2a4a18",
        "type": "inject",
        "z": "a54f8e5d.b4c1f8",
        "name": "",
        "repeat": "2",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "inputString",
        "payloadType": "flow",
        "x": 110,
        "y": 200,
        "wires": [
            [
                "f0d8d568.b84e98",
                "300e462b.4fc702"
            ]
        ]
    },
    {
        "id": "5806ea2b.67a46c",
        "type": "function",
        "z": "a54f8e5d.b4c1f8",
        "name": "GET WEIGHT",
        "func": "var payload = msg.payload;\nvar parser = flow.get('parser');\nvar currentWeight = parser(payload);\n\nflow.set('weigth_time',new Date());\nflow.set('currentWeight',currentWeight);\n\nmsg.payload = currentWeight;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 560,
        "y": 260,
        "wires": [
            [
                "4fd59078.505e",
                "27b462b3.d6c846"
            ]
        ]
    },
    {
        "id": "ed0af088.1509c",
        "type": "comment",
        "z": "a54f8e5d.b4c1f8",
        "name": "Device level",
        "info": "",
        "x": 70,
        "y": 160,
        "wires": []
    },
    {
        "id": "9bb5cf41.fe20a8",
        "type": "inject",
        "z": "a54f8e5d.b4c1f8",
        "name": "init",
        "repeat": "",
        "crontab": "",
        "once": true,
        "topic": "",
        "payload": "init",
        "payloadType": "str",
        "x": 70,
        "y": 100,
        "wires": [
            [
                "2ef86562.bbc57a"
            ]
        ]
    },
    {
        "id": "631fcc69.709dbc",
        "type": "comment",
        "z": "a54f8e5d.b4c1f8",
        "name": "INITIALIZING",
        "info": "",
        "x": 70,
        "y": 40,
        "wires": []
    },
    {
        "id": "27b462b3.d6c846",
        "type": "link out",
        "z": "a54f8e5d.b4c1f8",
        "name": "",
        "links": [
            "68c56012.d67178"
        ],
        "x": 747.1652221679688,
        "y": 243.91742515563965,
        "wires": []
    },
    {
        "id": "f0d8d568.b84e98",
        "type": "debug",
        "z": "a54f8e5d.b4c1f8",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 296.0826110839844,
        "y": 201.95871257781982,
        "wires": []
    },
    {
        "id": "4fd59078.505e",
        "type": "debug",
        "z": "a54f8e5d.b4c1f8",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 811.1652221679688,
        "y": 204.91742515563965,
        "wires": []
    },
    {
        "id": "8c676e41.242518",
        "type": "function",
        "z": "a54f8e5d.b4c1f8",
        "name": "time_rasp",
        "func": "var time = new Date();\nflow.set(\"time_rasp\", time);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 246.08261108398438,
        "y": 441.9587125778198,
        "wires": [
            [
                "c92779df.3ba7a"
            ]
        ]
    },
    {
        "id": "76e98045.dfd438",
        "type": "inject",
        "z": "a54f8e5d.b4c1f8",
        "name": "",
        "repeat": "1",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 96.08261108398438,
        "y": 441.9587125778198,
        "wires": [
            [
                "8c676e41.242518"
            ]
        ]
    },
    {
        "id": "c92779df.3ba7a",
        "type": "function",
        "z": "a54f8e5d.b4c1f8",
        "name": "sub time",
        "func": "var weigth_time = flow.get(\"weigth_time\");\nvar time_rasp = flow.get(\"time_rasp\");\n\nvar sub = time_rasp - weigth_time;\n//msg.payload = {\n//    sub: time_rasp - weigth_time,\n//    weigth_time: weigth_time,\n//    time_rasp: time_rasp\n//}\n\n    if(sub > 5000){\n    msg.payload = 0;\n    return msg;\n    }\n",
        "outputs": 1,
        "noerr": 0,
        "x": 386.0826110839844,
        "y": 441.9587125778198,
        "wires": [
            [
                "3866dc1e.3740e4",
                "27b462b3.d6c846"
            ]
        ]
    },
    {
        "id": "3866dc1e.3740e4",
        "type": "debug",
        "z": "a54f8e5d.b4c1f8",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 556.0826110839844,
        "y": 441.9587125778198,
        "wires": []
    },
    {
        "id": "5e6ef9c0.74d338",
        "type": "function",
        "z": "a54f8e5d.b4c1f8",
        "name": "weigth_time",
        "func": "flow.set('weigth_time',new Date());\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 256.0826110839844,
        "y": 401.9587125778198,
        "wires": [
            []
        ]
    },
    {
        "id": "300e462b.4fc702",
        "type": "tcp request",
        "z": "a54f8e5d.b4c1f8",
        "name": "",
        "server": "10.10.190.103",
        "port": "1704",
        "out": "char",
        "splitc": "kg",
        "x": 310,
        "y": 260,
        "wires": [
            [
                "5806ea2b.67a46c",
                "5e6ef9c0.74d338",
                "db4f3948.e8b04"
            ]
        ]
    },
    {
        "id": "e6c528e7.d7da98",
        "type": "debug",
        "z": "a54f8e5d.b4c1f8",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 690,
        "y": 140,
        "wires": []
    },
    {
        "id": "db4f3948.e8b04",
        "type": "function",
        "z": "a54f8e5d.b4c1f8",
        "name": "GET WEIGHT",
        "func": "msg.payload = msg.payload.toString();\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 520,
        "y": 140,
        "wires": [
            [
                "e6c528e7.d7da98"
            ]
        ]
    },
    {
        "id": "dea8e0df.a1491",
        "type": "http in",
        "z": "50659fd3.e828d8",
        "name": "",
        "url": "/firmware",
        "method": "post",
        "swaggerDoc": "",
        "x": 140,
        "y": 100,
        "wires": [
            [
                "a7c7e36c.1fddc"
            ]
        ]
    },
    {
        "id": "a7c7e36c.1fddc",
        "type": "file",
        "z": "50659fd3.e828d8",
        "name": "deivce_config",
        "filename": "deivce_config2.json",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "x": 460,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "59be872e.ce98b",
        "type": "exec",
        "z": "50659fd3.e828d8",
        "command": "cat /proc/cpuinfo",
        "addpay": true,
        "append": "| grep Serial",
        "useSpawn": "",
        "timer": "5",
        "name": "",
        "x": 400,
        "y": 40,
        "wires": [
            [
                "9a326b00.6fbf5",
                "fdd9b4e9.5f55d8"
            ],
            [],
            []
        ]
    },
    {
        "id": "6993e5d0.2cb6e4",
        "type": "function",
        "z": "50659fd3.e828d8",
        "name": "main config",
        "func": "flow.set('prevWeight',null);\nflow.set('transaction',null);\nflow.set('transactionData',[]);\nflow.set('transactionMaxWeight',null);\nflow.set('transactionHasMinWeight',null);\nflow.set('transactionHasMaxWeight',null);\nflow.set('transactionHasMaxDuration',null);\nflow.set('lasttimedata', new Date());\nflow.set('checkHealth',null);\nflow.set('transactionWaybill',null);\nflow.set('transactionAccWeight', null);\nflow.set('transactionHasOverLoad', null);\nflow.set('transactionOperationName', null);\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 490,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "c97fa1a9.5af9d8",
        "type": "inject",
        "z": "50659fd3.e828d8",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": true,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 110,
        "y": 220,
        "wires": [
            [
                "82f29cc.957cd6",
                "717c4598.21c044"
            ]
        ]
    },
    {
        "id": "82f29cc.957cd6",
        "type": "file in",
        "z": "50659fd3.e828d8",
        "name": "deivce_config",
        "filename": "deivce_config2.json",
        "format": "utf8",
        "x": 300,
        "y": 220,
        "wires": [
            [
                "d833c773.fa1e18"
            ]
        ]
    },
    {
        "id": "7c8db9c0.5b441",
        "type": "http in",
        "z": "50659fd3.e828d8",
        "name": "",
        "url": "/serial",
        "method": "get",
        "swaggerDoc": "",
        "x": 140,
        "y": 40,
        "wires": [
            [
                "59be872e.ce98b"
            ]
        ]
    },
    {
        "id": "9a326b00.6fbf5",
        "type": "http response",
        "z": "50659fd3.e828d8",
        "name": "",
        "x": 616,
        "y": 23,
        "wires": []
    },
    {
        "id": "fdd9b4e9.5f55d8",
        "type": "function",
        "z": "50659fd3.e828d8",
        "name": "",
        "func": "msg.payload = msg.payload.split(':')[1].replace('\\n','').replace(' ','');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 622,
        "y": 59,
        "wires": [
            [
                "e57539c2.124a5"
            ]
        ]
    },
    {
        "id": "e57539c2.124a5",
        "type": "debug",
        "z": "50659fd3.e828d8",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 759,
        "y": 54,
        "wires": []
    },
    {
        "id": "5c2e51ca.2f6638",
        "type": "inject",
        "z": "50659fd3.e828d8",
        "name": "DEMO",
        "repeat": "10800",
        "crontab": "",
        "once": true,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 120,
        "y": 180,
        "wires": [
            [
                "58ef1dc3.bc8644"
            ]
        ]
    },
    {
        "id": "58ef1dc3.bc8644",
        "type": "function",
        "z": "50659fd3.e828d8",
        "name": "DEMO Data",
        "func": "var device_config = {\n    'event_move_in_id':'80096D9ABE7F68F3E0533300000A6C0D',\n    'event_move_in_minus_id':'8DB9B239DF5252F0E055000000000001',\n    'event_move_out_id':'80096D9ABE8068F3E0533300000A6C0D',\n    'event_max_weight_id':'85A255F950F9BEF4E0533300000AC45D',\n    'event_on_id': '85A2CC45702A2DD1E0533300000A0C94',\n    'event_off_id':'85A2CC4570292DD1E0533300000A0C94',\n    'event_max_duration':'8642EE858DE89BAAE0533300000AFCC7',\n    'event_fake_traffic':'80096EF60C186574E0533300000ADBA5',\n    'event_get_weight_acc':'800970AC1FDC683CE0533300000AF1B0',\n    'event_min_weight':'875C3EB5C9DD092DE055000000000001',\n    'event_driver_in':'8E68D8D8B2977181E055000000000001',\n    'event_over_load':'B3EB5F800EFD2620E0530101007F8A05',\n    'snapshot_events':['80096D9ABE7F68F3E0533300000A6C0D','85A255F950F9BEF4E0533300000AC45D','8642EE858DE89BAAE0533300000AFCC7','800970AC1FDC683CE0533300000AF1B0', \"8E68D8D8B2977181E055000000000001\",\"B3EB5F800EFD2620E0530101007F8A05\"],\n    'main_host':'',\n    'event_url':'/iot_cli/events/log',\n    'state_url':'/iot_cli/device',\n    'snapshot_url':'/iot_cli/events/snapshot',\n    'maxWeight':60000,\n    'maxDuration':600000,\n    'minWeight':-40,\n    'checkHealthTimeout':3000,\n    'minTriggerWeight':40,\n    'driverWeight':80,\n    'overLoadWeight': 200,\n    'stableDiff': 60\n};\nmsg.payload = device_config;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 290,
        "y": 180,
        "wires": [
            [
                "a7c7e36c.1fddc"
            ]
        ]
    },
    {
        "id": "d833c773.fa1e18",
        "type": "function",
        "z": "50659fd3.e828d8",
        "name": "device config",
        "func": "var device_config = JSON.parse(msg.payload);\n\nflow.set('scale_id',device_config.scale_id);\nflow.set('event_move_in_id',device_config.event_move_in_id);\nflow.set('event_move_in_minus_id',device_config.event_move_in_minus_id);\nflow.set('event_move_out_id',device_config.event_move_out_id);\nflow.set('event_max_weight_id',device_config.event_max_weight_id);\nflow.set('event_off_id',device_config.event_off_id);\nflow.set('event_on_id', device_config.event_on_id);\nflow.set('event_max_duration',device_config.event_max_duration);\nflow.set('event_fake_traffic',device_config.event_fake_traffic);\nflow.set('event_driver_in', device_config.event_driver_in);\nflow.set('event_over_load',device_config.event_over_load);\nflow.set('main_host',device_config.main_host);\nflow.set('event_url',device_config.event_url);\nflow.set('state_url',device_config.state_url);\nflow.set('maxWeight',device_config.maxWeight);\nflow.set('minWeight',device_config.minWeight);\nflow.set('maxDuration',device_config.maxDuration);\nflow.set('checkHealthTimeout',device_config.checkHealthTimeout);\nflow.set('event_get_weight_acc',device_config.event_get_weight_acc);\nflow.set('event_min_weight',device_config.event_min_weight);\nflow.set('minTriggerWeight',device_config.minTriggerWeight);\nflow.set('snapshot_url',device_config.snapshot_url);\nflow.set('snapshot_events',device_config.snapshot_events);\nflow.set('driverWeight',device_config.driverWeight);\nflow.set('overLoadWeight', device_config.overLoadWeight);\nflow.set('stableDiff', device_config.stableDiff);\n\nmsg.payload = {\n\tscale_id: flow.get('scale_id'),\n\tevent_move_in_id: flow.get('event_move_in_id'),\n\tevent_move_in_minus_id: flow.get('event_move_in_minus_id'),\n\tevent_move_out_id: flow.get('event_move_out_id'),\n\tevent_max_weight_id: flow.get('event_max_weight_id'),\n\tevent_off_id: flow.get('event_off_id'),\n\tevent_on_id: flow.get('event_on_id'),\n\tevent_max_duration: flow.get('event_max_duration'),\n\tevent_fake_traffic: flow.get('event_fake_traffic'),\n\tevent_driver_in: flow.get('event_driver_in'),\n\tevent_over_load: flow.get('event_over_load'),\n\tmain_host: flow.get('main_host'),\n\tevent_url: flow.get('event_url'),\n\tstate_url: flow.get('state_url'),\n\tmaxWeight: flow.get('maxWeight'),\n\tminWeight: flow.get('minWeight'),\n\tmaxDuration: flow.get('maxDuration'),\n\tcheckHealthTimeout: flow.get('checkHealthTimeout'),\n\tevent_get_weight_acc: flow.get('event_get_weight_acc'),\n\tevent_min_weight: flow.get('event_min_weight'),\n\tminTriggerWeight: flow.get('minTriggerWeight'),\n\tsnapshot_url: flow.get('snapshot_url'),\n\tsnapshot_events: flow.get('snapshot_events'),\n\tdriverWeight: flow.get('driverWeight'),\n\toverLoadWeight: flow.get('overLoadWeight'),\n\tstableDiff: flow.get('stableDiff')\n};\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 490,
        "y": 220,
        "wires": [
            [
                "5eb5c203.43aef4"
            ]
        ]
    },
    {
        "id": "5eb5c203.43aef4",
        "type": "json",
        "z": "50659fd3.e828d8",
        "name": "",
        "x": 630,
        "y": 220,
        "wires": [
            [
                "d09a1539.76b8f8"
            ]
        ]
    },
    {
        "id": "d09a1539.76b8f8",
        "type": "debug",
        "z": "50659fd3.e828d8",
        "name": "IN device config",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 780,
        "y": 220,
        "wires": []
    },
    {
        "id": "717c4598.21c044",
        "type": "trigger",
        "z": "50659fd3.e828d8",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "0",
        "extend": false,
        "units": "ms",
        "reset": "",
        "outputs": 1,
        "x": 283.8571428571429,
        "y": 264.4285714285714,
        "wires": [
            [
                "6993e5d0.2cb6e4"
            ]
        ]
    },
    {
        "id": "450b368f.c11ff8",
        "type": "comment",
        "z": "50659fd3.e828d8",
        "name": "Init",
        "info": "",
        "x": 90,
        "y": 140,
        "wires": []
    },
    {
        "id": "ffeaf20a.7ffcd",
        "type": "function",
        "z": "50659fd3.e828d8",
        "name": "transactionHasMaxWeight",
        "func": "msg.event_id = flow.get('event_max_weight_id');\nmsg.description = 'Перевищена максимально-допустима вага, кг: ' + msg.metadata.weight;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 690,
        "y": 640,
        "wires": [
            [
                "7c84adf9.704b24"
            ]
        ]
    },
    {
        "id": "7315fe88.98ca2",
        "type": "switch",
        "z": "50659fd3.e828d8",
        "name": "switch max weight",
        "property": "transactionHasMaxWeight",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 450,
        "y": 560,
        "wires": [
            [
                "ffeaf20a.7ffcd"
            ]
        ]
    },
    {
        "id": "7c84adf9.704b24",
        "type": "function",
        "z": "50659fd3.e828d8",
        "name": "events payload",
        "func": "var event_id = msg.event_id;\nvar scale_id = global.get('scale_id');\nvar snapshot_events = flow.get('snapshot_events');\nvar snapshot = false;\n\nif (snapshot_events.indexOf(event_id)>=0){\n    snapshot = true;\n}\n\nmsg.payload = {\n    'event':{\n        'id':msg.event_id\n    },\n    'devices':[{'id':scale_id}],\n    'data':msg.metadata,\n    'description':msg.description\n}\n\nmsg.headers = {\n    \"content-type\":\"application/json\"\n}\n\nmsg.url = flow.get('main_host')+flow.get('event_url');\nmsg.main_host = flow.get('main_host');\nmsg.event_url = flow.get('event_url');\nmsg.snapshot = snapshot;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1020,
        "y": 600,
        "wires": [
            [
                "a6890838.0524e"
            ]
        ]
    },
    {
        "id": "bd35c7af.e2732",
        "type": "function",
        "z": "50659fd3.e828d8",
        "name": "main module",
        "func": "var prevWeight = flow.get('prevWeight');\nvar transaction = flow.get('transaction');\nvar transactionData = flow.get('transactionData');\nvar transactionMaxWeight = flow.get('transactionMaxWeight');\nvar transactionHasMaxWeight = flow.get('transactionHasMaxWeight');\nvar transactionHasMinWeight = flow.get('transactionHasMinWeight');\nvar transactionHasMaxDuration = flow.get('transactionHasMaxDuration');\nvar transactionOperationName = flow.get('transactionOperationName');\nvar stableDiff = flow.get('stableDiff');//дельта стабільності\nvar waybill = flow.get('transactionWaybill');\nvar weight = msg.payload;\nvar stableSize = 5;\nvar duration = 0;\nvar operation_name_income = \"Приход (авто)\";\nvar maxWeight = flow.get('maxWeight');\nvar maxDuration = flow.get('maxDuration');\nvar prevTransaction = transaction;\nvar minWeight = flow.get('minWeight');\nvar minTriggerWeight = flow.get('minTriggerWeight');\nvar is_minus = false;\nvar transactionAccWeight = flow.get('transactionAccWeight');//облікова вага\nvar overLoadWeight = flow.get('overLoadWeight');\n\n//transaction\nif (prevWeight === null){\n    prevWeight = msg.payload;    \n}else{\n    if((prevWeight <= 0) && (weight > 0) && (weight > minTriggerWeight)){\n        //start of transaction\n        transaction = Date.now();\n        msg.on = true;\n        flow.set('transaction',transaction);\n    }else if((prevWeight > 0) && (weight <=0) && (transaction)){\n        //transaction = 0;\n        msg.on = false;\n        transactionData = [];\n        flow.set('transaction',0);\n        flow.set('transactionMaxWeight',null);\n        flow.set('transactionHasMaxWeight',null);\n        flow.set('transactionHasMinWeight',null);\n        flow.set('transactionHasMaxDuration',null);\n        flow.set('transactionHasOverLoad',null);\n        flow.set('transactionOperationName',null);\n        flow.set('transactionWaybill',null);\n        flow.set('transactionMetadata',null);\n        flow.set('transactionAccWeight', null);//облікова вага\n    }else if((transaction === null) && (weight>0) && (weight > minTriggerWeight)){\n        transaction = Date.now();\n        flow.set('transaction',transaction);\n    }\n    if((prevWeight < 0) && ((weight-prevWeight) > minTriggerWeight)){\n        //start of transaction\n        is_minus = true;\n        msg.prevWeight = prevWeight;\n    }\n}\n\nmsg.stable = true;\n\nif (transaction > 0){\n    transactionData.push(weight);    \n\n    //stable\n    if(transactionData.length > stableSize+1){\n        var stabletmp = true;\n        for (var i = transactionData.length-1; i > transactionData.length-1-stableSize; i--){\n            if ((transactionData[i] - transactionData[i-1]) > stableDiff || (transactionData[i] - transactionData[i-1]) < -stableDiff){\n                stabletmp = false;\n                msg.stable = stabletmp;\n                break;\n            }\n            msg.stable = stabletmp;\n        }\n    }else{\n        msg.stable = false;\n    }\n\n    //duration & transactionMaxWeight\n    duration = (Number(Date.now()) - Number(transaction));\n    if( (weight>transactionMaxWeight) || (transactionMaxWeight === null)){\n        transactionMaxWeight = weight;\n        flow.set(\"transactionMaxWeight\",transactionMaxWeight);\n    }\n    \n    if(!transactionHasMaxWeight && weight > maxWeight){\n        msg.transactionHasMaxWeight = true;\n        flow.set('transactionHasMaxWeight',true);\n    }\n    \n    if(!transactionHasMinWeight && weight < minWeight){\n        msg.transactionHasMinWeight = true;\n        flow.set('transactionHasMinWeight',true);\n    }\n    \n    //max duartion\n    if(!transactionHasMaxDuration && duration > maxDuration){\n        msg.transactionHasMaxDuration = true;\n        flow.set('transactionHasMaxDuration',true);\n    }\n}\n\n//result\nmsg.metadata = {\n    'weight':weight,\n    'prevWeight':prevWeight,\n    'prevTransaction':prevTransaction,\n    'transaction':transaction,\n    'on':msg.on,\n    'transactionDataCount':transactionData.length,\n    'stable':msg.stable,\n    'duration':Math.round(duration/1000),\n    'transactionMaxWeight':transactionMaxWeight,\n    'transactionAccWeight':transactionAccWeight,\n    'waybill':waybill,\n    'perimetr':true,\n    'weight1':msg.weight1,\n    'weight2':msg.weight2,\n    'weight_center':msg.weight_center,\n    'driverInCar':false,\n    'transactionOperationName':transactionOperationName\n}\nflow.set('transactionData',transactionData);\nflow.set('prevWeight',weight);\nflow.set('transactionMetadata',msg.metadata);\nflow.set('lasttimedata', new Date());\nmsg.is_minus = is_minus;\n\nif(transactionAccWeight && transactionOperationName!==operation_name_income){\n    \n   flow.set('transactionHasOverLoad',(weight-transactionAccWeight)>overLoadWeight);\n   \n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 190,
        "y": 540,
        "wires": [
            [
                "e1a3eb8d.eef68",
                "7315fe88.98ca2",
                "7122aeec.36441",
                "c8c6de14.9f8468",
                "cbd4d72c.9cfe5"
            ]
        ]
    },
    {
        "id": "3bc6c8ef.ff9768",
        "type": "function",
        "z": "50659fd3.e828d8",
        "name": "get weight from accounting system",
        "func": "var transactionMetadata = flow.get('transactionMetadata');\nvar transactionMaxWeight = flow.get('transactionMaxWeight');\nvar driverWeight = flow.get('driverWeight');\nvar buisness_data = msg.req.query;\n\nmsg.metadata = Object.assign(transactionMetadata,buisness_data);\n\n//check driver in a car\nvar driver_in = false;\nmsg.driverWeight = driverWeight;\nif((transactionMaxWeight - msg.metadata.weight) < driverWeight){\n    driver_in = true;\n}\n\nmsg.event_id = flow.get('event_get_weight_acc');\ntransactionWaybill = flow.get('transactionWaybill');\nif (!transactionWaybill){\n    flow.set('transactionWaybill',msg.req.query.reader);\n}\nmsg.description = ' '+buisness_data.operation_name+'. '+buisness_data.operation_type+'. Зважили в 1С. Поточна вага: ' + msg.metadata.weight+\" Номер авто: \"+buisness_data.truck1+\" \"+buisness_data.truck2+\" \"+buisness_data.item_name + \", ТТН: \" + buisness_data.waybill;\nmsg.transactionMetadata = transactionMetadata;\nmsg.driver_in = driver_in;\n\nflow.set('transactionAccWeight',  msg.metadata.weight);//облікова вага\nflow.set('transactionOperationName',  msg.metadata.operation_name);//вид операції\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 537.1428680419922,
        "y": 997.1428661346436,
        "wires": [
            [
                "fc390a05.3ced58",
                "7c84adf9.704b24"
            ]
        ]
    },
    {
        "id": "a6890838.0524e",
        "type": "debug",
        "z": "50659fd3.e828d8",
        "name": "IN event",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 1180,
        "y": 600,
        "wires": []
    },
    {
        "id": "e20b3fd7.0017a8",
        "type": "function",
        "z": "50659fd3.e828d8",
        "name": "move in",
        "func": "msg.event_id = flow.get('event_move_in_id');\nmsg.description = 'Заїзд на ваги. Поточна вага: ' + msg.metadata.weight;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 640,
        "y": 560,
        "wires": [
            [
                "7c84adf9.704b24"
            ]
        ]
    },
    {
        "id": "572b72fb.bff324",
        "type": "function",
        "z": "50659fd3.e828d8",
        "name": "off",
        "func": "msg.event_id = flow.get('event_off_id');\nmsg.description = 'Прилад відключено';\nmsg.metadata = {\n    'state':msg.checkHealth\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 630,
        "y": 860,
        "wires": [
            [
                "47cfa9e4.3f69d8"
            ]
        ]
    },
    {
        "id": "5c37045d.d48364",
        "type": "function",
        "z": "50659fd3.e828d8",
        "name": "on",
        "func": "msg.event_id = flow.get('event_on_id');\nmsg.description = 'Прилад підключено';\nmsg.metadata = {\n    'state':msg.checkHealth\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 630,
        "y": 820,
        "wires": [
            [
                "b98ea4aa.d57628"
            ]
        ]
    },
    {
        "id": "90c98e85.2ceb38",
        "type": "function",
        "z": "50659fd3.e828d8",
        "name": "move out",
        "func": "msg.event_id = flow.get('event_move_out_id');\nmsg.description = 'Зїзд з ваг. Максимальна вага: ' + msg.metadata.transactionMaxWeight;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 640,
        "y": 600,
        "wires": [
            [
                "7c84adf9.704b24"
            ]
        ]
    },
    {
        "id": "e5d1bc63.bc57b8",
        "type": "function",
        "z": "50659fd3.e828d8",
        "name": "transaction has max duration",
        "func": "msg.event_id = flow.get('event_max_duration');\nmsg.description = 'Перевищено максимальний час находження на вагах, сек: ' + msg.metadata.duration;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 700,
        "y": 680,
        "wires": [
            [
                "7c84adf9.704b24"
            ]
        ]
    },
    {
        "id": "478cce3f.3774e",
        "type": "function",
        "z": "50659fd3.e828d8",
        "name": "empty waybill",
        "func": "msg.event_id = flow.get('event_fake_traffic');\nmsg.description = 'Холостий проїзд по вагам. Тривалість проїзду ' + Math.round(msg.metadata.duration/60)+ 'хв.'+ \" Максимальна вага: \" + msg.metadata.transactionMaxWeight + \" кг.\";\n//metadata.transactionMaxWeight\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 800,
        "y": 520,
        "wires": [
            [
                "7c84adf9.704b24"
            ]
        ]
    },
    {
        "id": "9d83f3e1.954078",
        "type": "function",
        "z": "50659fd3.e828d8",
        "name": "transactionHasMinWeight",
        "func": "msg.event_id = flow.get('event_min_weight');\nmsg.description = 'Перевищена мінімально-допустима вага, кг: ' + msg.metadata.weight;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 690,
        "y": 720,
        "wires": [
            [
                "7c84adf9.704b24"
            ]
        ]
    },
    {
        "id": "f78f7ad8.cedda8",
        "type": "function",
        "z": "50659fd3.e828d8",
        "name": "move in minus",
        "func": "msg.event_id = flow.get('event_move_in_minus_id');\nmsg.description = 'Заїзд із мінусом. ' + msg.prevWeight +' кг.';\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 660,
        "y": 480,
        "wires": [
            [
                "7c84adf9.704b24"
            ]
        ]
    },
    {
        "id": "68c56012.d67178",
        "type": "link in",
        "z": "50659fd3.e828d8",
        "name": "s4",
        "links": [
            "27b462b3.d6c846"
        ],
        "x": 35,
        "y": 540,
        "wires": [
            [
                "4d866d04.e54d04",
                "47fc707.6438b1",
                "1f7418b5.5b4c07",
                "bd35c7af.e2732"
            ]
        ]
    },
    {
        "id": "e1a3eb8d.eef68",
        "type": "switch",
        "z": "50659fd3.e828d8",
        "name": "switch move",
        "property": "on",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 432,
        "y": 522.9999885559082,
        "wires": [
            [
                "e20b3fd7.0017a8"
            ],
            [
                "90c98e85.2ceb38",
                "4285a3d1.71e624",
                "2135af9d.6b6bc"
            ]
        ]
    },
    {
        "id": "7122aeec.36441",
        "type": "switch",
        "z": "50659fd3.e828d8",
        "name": "max duration",
        "property": "transactionHasMaxDuration",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 430,
        "y": 600,
        "wires": [
            [
                "e5d1bc63.bc57b8"
            ]
        ]
    },
    {
        "id": "c8c6de14.9f8468",
        "type": "switch",
        "z": "50659fd3.e828d8",
        "name": "switch min weight",
        "property": "transactionHasMinWeight",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 450,
        "y": 640,
        "wires": [
            [
                "9d83f3e1.954078"
            ]
        ]
    },
    {
        "id": "cbd4d72c.9cfe5",
        "type": "switch",
        "z": "50659fd3.e828d8",
        "name": "switch minus in",
        "property": "is_minus",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 440,
        "y": 480,
        "wires": [
            [
                "f78f7ad8.cedda8"
            ]
        ]
    },
    {
        "id": "fc390a05.3ced58",
        "type": "switch",
        "z": "50659fd3.e828d8",
        "name": "",
        "property": "driver_in",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 830,
        "y": 1000,
        "wires": [
            [
                "a210b050.aaf778",
                "3a782612.955cfa"
            ]
        ]
    },
    {
        "id": "9b41fb17.abfef8",
        "type": "http in",
        "z": "50659fd3.e828d8",
        "name": "",
        "url": "/api/platform/getWeight3",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 223.57144165039062,
        "y": 998.714282989502,
        "wires": [
            [
                "b2d58803.abdc18",
                "3bc6c8ef.ff9768"
            ]
        ]
    },
    {
        "id": "a210b050.aaf778",
        "type": "function",
        "z": "50659fd3.e828d8",
        "name": "driver_in event",
        "func": "msg.event_id = flow.get('event_driver_in');\nmsg.description = 'При зважуванні водій в кабіні. Вага: ' + msg.metadata.weight+\"кг. Номер авто: \"+msg.metadata.truck1+\" \"+msg.metadata.truck2+\" \"+msg.metadata.item_name;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1052.0159301757812,
        "y": 762.2064208984375,
        "wires": [
            [
                "7c84adf9.704b24"
            ]
        ]
    },
    {
        "id": "b98cc575.ce5af",
        "type": "switch",
        "z": "50659fd3.e828d8",
        "name": "",
        "property": "checkHealth",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 490,
        "y": 840,
        "wires": [
            [
                "5c37045d.d48364"
            ],
            [
                "572b72fb.bff324"
            ]
        ]
    },
    {
        "id": "4285a3d1.71e624",
        "type": "switch",
        "z": "50659fd3.e828d8",
        "name": "waybill",
        "property": "metadata.waybill",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 640,
        "y": 520,
        "wires": [
            [
                "478cce3f.3774e"
            ]
        ]
    },
    {
        "id": "4d866d04.e54d04",
        "type": "socket-io-out",
        "z": "50659fd3.e828d8",
        "name": "socket 4002",
        "event": "4358e8ed.41d73",
        "server": "ad6985c6.1486e8",
        "x": 190,
        "y": 600,
        "wires": []
    },
    {
        "id": "47fc707.6438b1",
        "type": "ui_text",
        "z": "50659fd3.e828d8",
        "group": "9bf2a625.21192",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Поточна вага:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 199,
        "y": 634.0000114440918,
        "wires": []
    },
    {
        "id": "3a782612.955cfa",
        "type": "debug",
        "z": "50659fd3.e828d8",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 990,
        "y": 1000,
        "wires": []
    },
    {
        "id": "b2d58803.abdc18",
        "type": "function",
        "z": "50659fd3.e828d8",
        "name": "response",
        "func": "msg.payload = flow.get('transactionMetadata');\nmsg.payload.driverInCar = false;\ntransactionWaybill = flow.get('transactionWaybill');\nmsg.payload.transactionWaybill = transactionWaybill;\nif(transactionWaybill && transactionWaybill !== msg.req.query.reader){\n    msg.payload.status = false;    \n}else {\n    msg.payload.status = true;    \n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 460,
        "y": 1060,
        "wires": [
            [
                "de5eae12.d8df38"
            ]
        ]
    },
    {
        "id": "8d298856.5bc53",
        "type": "function",
        "z": "50659fd3.e828d8",
        "name": "check scale health",
        "func": "var lastcheckHealth = flow.get('checkHealth');\nvar checkHealth = null;\nvar lasttimedata = flow.get('lasttimedata');\n\nvar currenttimedata = new Date();\n\nif ((currenttimedata - lasttimedata) > 3000){\n    checkHealth = false;\n} else {\n    checkHealth = true;\n}\n\nflow.set(\"checkHealth\",checkHealth);\n\nif (lastcheckHealth != checkHealth){\n    msg.checkHealth = checkHealth;\n}else{\n    msg.checkHealth = null;\n}\nmsg.payload = checkHealth;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 310,
        "y": 840,
        "wires": [
            [
                "b98cc575.ce5af"
            ]
        ]
    },
    {
        "id": "de5eae12.d8df38",
        "type": "http response",
        "z": "50659fd3.e828d8",
        "name": "",
        "x": 670,
        "y": 1060,
        "wires": []
    },
    {
        "id": "67c08cd9.f1cb5c",
        "type": "inject",
        "z": "50659fd3.e828d8",
        "name": "",
        "repeat": "6",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 840,
        "wires": [
            [
                "8d298856.5bc53"
            ]
        ]
    },
    {
        "id": "8f69bab6.1d7fb",
        "type": "http in",
        "z": "50659fd3.e828d8",
        "name": "",
        "url": "/api/platform/getSimpleWeight3",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 240,
        "y": 1140,
        "wires": [
            [
                "9a51a7be.343ca8"
            ]
        ]
    },
    {
        "id": "9a51a7be.343ca8",
        "type": "function",
        "z": "50659fd3.e828d8",
        "name": "response",
        "func": "msg.payload = {\n    weight: flow.get('transactionMetadata').weight\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1140,
        "wires": [
            [
                "676251bb.e4db"
            ]
        ]
    },
    {
        "id": "676251bb.e4db",
        "type": "http response",
        "z": "50659fd3.e828d8",
        "name": "",
        "x": 630,
        "y": 1140,
        "wires": []
    },
    {
        "id": "aa133276.5edbc8",
        "type": "http in",
        "z": "50659fd3.e828d8",
        "name": "",
        "url": "/api/platform/socket3",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 210,
        "y": 1280,
        "wires": [
            [
                "dc4a70496ebf61cd"
            ]
        ]
    },
    {
        "id": "1f7418b5.5b4c07",
        "type": "ui_chart",
        "z": "50659fd3.e828d8",
        "name": "",
        "group": "556dabca.b016cc",
        "order": 0,
        "width": "6",
        "height": "6",
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "ymin": "-20",
        "ymax": "70000",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "outputs": 2,
        "x": 169.3333740234375,
        "y": 670.3333740234375,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "a520172f.44f5b",
        "type": "comment",
        "z": "50659fd3.e828d8",
        "name": "Зважити у Апекс",
        "info": "",
        "x": 162.3333740234375,
        "y": 951.3333625793457,
        "wires": []
    },
    {
        "id": "5fd0516d.5384",
        "type": "function",
        "z": "50659fd3.e828d8",
        "name": "over_load",
        "func": "msg.event_id = flow.get('event_over_load');\nmsg.description = 'Можливий досип після зважування. Максимальная вага: ' + msg.metadata.transactionMaxWeight + \"кг. Облікова вага: \" + msg.metadata.transactionAccWeight + \"кг.\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 800,
        "y": 400,
        "wires": [
            [
                "7c84adf9.704b24"
            ]
        ]
    },
    {
        "id": "2135af9d.6b6bc",
        "type": "switch",
        "z": "50659fd3.e828d8",
        "name": "",
        "property": "transactionHasOverLoad",
        "propertyType": "flow",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 630,
        "y": 400,
        "wires": [
            [
                "5fd0516d.5384"
            ]
        ]
    },
    {
        "id": "b98ea4aa.d57628",
        "type": "delay",
        "z": "50659fd3.e828d8",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "3",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "outputs": 1,
        "x": 780,
        "y": 820,
        "wires": [
            [
                "7c84adf9.704b24"
            ]
        ]
    },
    {
        "id": "47cfa9e4.3f69d8",
        "type": "delay",
        "z": "50659fd3.e828d8",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "3",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "outputs": 1,
        "x": 780,
        "y": 860,
        "wires": [
            [
                "7c84adf9.704b24"
            ]
        ]
    },
    {
        "id": "058ff3fa1572b1d1",
        "type": "websocket out",
        "z": "50659fd3.e828d8",
        "name": "",
        "server": "c2417995571b31a1",
        "client": "",
        "x": 690,
        "y": 1340,
        "wires": []
    },
    {
        "id": "8fa265e563bbbfa8",
        "type": "http response",
        "z": "50659fd3.e828d8",
        "name": "",
        "x": 651,
        "y": 1280,
        "wires": []
    },
    {
        "id": "dc4a70496ebf61cd",
        "type": "template",
        "z": "50659fd3.e828d8",
        "name": "Simple Web Page",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!DOCTYPE HTML>\n<html>\n    <head>\n    <title>Simple Live Display</title>\n    <script type=\"text/javascript\">\n        var ws;\n        var wsUri = \"ws:\";\n        var loc = window.location;\n        console.log(loc);\n        if (loc.protocol === \"https:\") { wsUri = \"wss:\"; }\n        // This needs to point to the web socket in the Node-RED flow\n        // ... in this case it's ws/simple\n        wsUri += \"//\" + loc.host + loc.pathname.replace(\"api/platform/socket3\",\"ws/simplejd\");\n\n        function wsConnect() {\n            console.log(\"connect\",wsUri);\n            ws = new WebSocket(wsUri);\n            //var line = \"\";    // either uncomment this for a building list of messages\n            ws.onmessage = function(msg) {\n                var line = \"\";  // or uncomment this to overwrite the existing message\n                // parse the incoming message as a JSON object\n                var data = msg.data;\n                //console.log(data);\n                // build the output from the topic and payload parts of the object\n                line += \"<h1>\"+data+\"</h1>\";\n                // replace the messages div with the new \"line\"\n                document.getElementById('messages').innerHTML = line;\n                //ws.send(JSON.stringify({data:data}));\n            }\n            ws.onopen = function() {\n                // update the status div with the connection status\n                //document.getElementById('status').innerHTML = \"connected\";\n                //ws.send(\"Open for data\");\n                //console.log(\"connected\");\n            }\n            ws.onclose = function() {\n                // update the status div with the connection status\n                //document.getElementById('status').innerHTML = \"not connected\";\n                // in case of lost connection tries to reconnect every 3 secs\n                setTimeout(wsConnect,3000);\n            }\n        }\n        \n        function doit(m) {\n            if (ws) { ws.send(m); }\n        }\n    </script>\n    </head>\n    <body onload=\"wsConnect();\" onunload=\"ws.disconnect();\">\n        <div id=\"messages\"></div>\n    </body>\n</html>\n",
        "x": 479,
        "y": 1280,
        "wires": [
            [
                "8fa265e563bbbfa8"
            ]
        ]
    },
    {
        "id": "986f5052e34d37ed",
        "type": "function",
        "z": "50659fd3.e828d8",
        "name": "format time nicely",
        "func": "\n\nmsg.payload = flow.get('transactionMetadata').weight;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 468,
        "y": 1340,
        "wires": [
            [
                "058ff3fa1572b1d1"
            ]
        ]
    },
    {
        "id": "1d6a621a0e6c8508",
        "type": "websocket in",
        "z": "50659fd3.e828d8",
        "name": "",
        "server": "c2417995571b31a1",
        "client": "",
        "x": 467,
        "y": 1392,
        "wires": [
            [
                "a714d956daafe033"
            ]
        ]
    },
    {
        "id": "a714d956daafe033",
        "type": "debug",
        "z": "50659fd3.e828d8",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 657,
        "y": 1392,
        "wires": []
    },
    {
        "id": "95809c1013117c56",
        "type": "inject",
        "z": "50659fd3.e828d8",
        "name": "Tick every 5 secs",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "test",
        "payload": "12345",
        "payloadType": "num",
        "x": 230,
        "y": 1340,
        "wires": [
            [
                "986f5052e34d37ed"
            ]
        ]
    }
]
